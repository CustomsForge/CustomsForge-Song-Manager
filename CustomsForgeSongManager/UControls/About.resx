<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="picCF.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        dzOuAAAAAElFTkSuQmCC
</value>
  </data>
  <metadata name="toolTip.TrayLocation" type="System.Drawing.Point, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a">
    <value>23, 15</value>
  </metadata>
  <metadata name="toolTip.TrayLocation" type="System.Drawing.Point, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a">
    <value>23, 15</value>
  </metadata>
  <metadata name="$this.TrayHeight" type="System.Int32, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089">
    <value>43</value>
  </metadata>
</root>