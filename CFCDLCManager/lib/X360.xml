<?xml version="1.0"?>
<doc>
    <assembly>
        <name>X360</name>
    </assembly>
    <members>
        <member name="T:X360.Security.Cryptography.Kerberos.KerbExtenz">
            <summary>
            RC4 Kerberos extensions
            </summary>
        </member>
        <member name="M:X360.Security.Cryptography.Kerberos.KerbExtenz.KerberosDecrypt(X360.Security.Cryptography.RC4,System.Byte[],System.Byte[]@,System.Int32,System.Byte[]@)">
            <summary>
            Runs a Kerberos implemented RC4 decryption
            </summary>
            <param name="xConfounder">The confounder input</param>
            <param name="xPayload">The payload input</param>
            <param name="x">RC4 reference</param>
            <param name="xData">Data to be decrypted</param>
            <param name="xConLen">Length of the Confounder</param>
            <returns></returns>
        </member>
        <member name="M:X360.Security.Cryptography.Kerberos.KerbExtenz.KerberosEncrypt(X360.Security.Cryptography.RC4,System.Byte[]@,System.Byte[]@)">
            <summary>
            Runs a Kerberos implemented RC4 Encryption
            </summary>
            <param name="xConfounder">Outputs new Confounder</param>
            <param name="xPayload">Outputs the payload</param>
            <param name="x">RC4 Reference</param>
            <returns></returns>
        </member>
        <member name="M:X360.Security.Cryptography.Kerberos.KerbExtenz.NewConfounder(X360.Security.Cryptography.RC4,System.Int64)">
            <summary>
            Generates a new counfounder of your choice
            </summary>
            <param name="x"></param>
            <param name="ConLen"></param>
            <returns></returns>
        </member>
        <member name="T:X360.Security.Cryptography.CryptoExcepts">
            <summary>
            Cryptographic exceptions
            </summary>
        </member>
        <member name="P:X360.Security.Cryptography.CryptoExcepts.CryptoSign">
            <summary>Signing error</summary>
        </member>
        <member name="P:X360.Security.Cryptography.CryptoExcepts.CryptoVeri">
            <summary>Verifying error</summary>
        </member>
        <member name="P:X360.Security.Cryptography.CryptoExcepts.RC4KeyError">
            <summary>Assigning RC4 Key</summary>
        </member>
        <member name="P:X360.Security.Cryptography.CryptoExcepts.RC4AlgoError">
            <summary>RC4 Algorithm Error</summary>
        </member>
        <member name="P:X360.Security.Cryptography.CryptoExcepts.KVError">
            <summary>Keyvault error</summary>
        </member>
        <member name="P:X360.Security.Cryptography.CryptoExcepts.KVSize">
            <summary>KeyVault error</summary>
        </member>
        <member name="P:X360.Security.Cryptography.CryptoExcepts.CertConflict">
            <summary>Certificate error</summary>
        </member>
        <member name="P:X360.Security.Cryptography.CryptoExcepts.ParamError">
            <summary>Invalid parameter</summary>
        </member>
        <member name="T:X360.Security.Cryptography.RC4">
            <summary>
            Initializes a new instance of an RC4 class
            </summary>
        </member>
        <member name="M:X360.Security.Cryptography.RC4.#ctor(System.Byte[])">
            <summary>
            Initializes this class with a specified binary key
            </summary>
            <param name="xKey"></param>
        </member>
        <member name="M:X360.Security.Cryptography.RC4.#ctor(System.String)">
            <summary>
            Initializes this class with a specified ASCII string key
            </summary>
            <param name="xKey"></param>
        </member>
        <member name="M:X360.Security.Cryptography.RC4.RunAlgorithm(System.Byte[])">
            <summary>
            Encrypts or decrypts the data
            </summary>
            <param name="xData"></param>
            <returns></returns>
        </member>
        <member name="P:X360.Security.Cryptography.RC4.KeyASCII">
            <summary>
            Gets or sets the key as an ASCII string
            </summary>
        </member>
        <member name="P:X360.Security.Cryptography.RC4.KeyBinary">
            <summary>
            Gets or sets the key used in this RC4 instance
            </summary>
        </member>
        <member name="T:X360.Security.Cryptography.HMACSHAQuick">
            <summary>
            Used for Quick HMACSHA1 Hashes
            </summary>
        </member>
        <member name="M:X360.Security.Cryptography.HMACSHAQuick.ComputeHash(System.Byte[],System.Byte[])">
            <summary>
            Runs an HMACSHA1 hash on specified data using specified key
            </summary>
            <param name="xKey"></param>
            <param name="xData"></param>
            <returns></returns>
        </member>
        <member name="T:X360.Security.Cryptography.RC4Quick">
            <summary>
            Get a decryption from just a key and a byte
            </summary>
        </member>
        <member name="M:X360.Security.Cryptography.RC4Quick.RunAlgorithm(System.Byte[],System.Byte[])">
            <summary>
            Runs an RC4 on the specified data using the specified key
            </summary>
            <param name="xKey"></param>
            <param name="xData"></param>
            <returns></returns>
        </member>
        <member name="M:X360.Security.Cryptography.RC4Quick.RunKerberosDecrypt(System.Byte[],System.Byte[],System.Byte[]@,System.Int32,System.Byte[]@)">
            <summary>
            Runs a Kerberos RC4 encryption on the specified data
            </summary>
            <param name="xKey">Key input</param>
            <param name="xConfounder">outputs the confounder</param>
            <param name="xPayload">Outputs the payload</param>
            <param name="xConLen">Confounder Length</param>
            <param name="xData">Outputs the decrypted data</param>
            <returns></returns>
        </member>
        <member name="M:X360.Security.Cryptography.RC4Quick.RunKerberosEncrypt(System.Byte[],System.Byte[]@,System.Byte[]@)">
            <summary>
            Runs an RC4 encryption with a specified key
            </summary>
            <param name="xKey"></param>
            <param name="xConfounder"></param>
            <param name="xPayload"></param>
            <returns></returns>
        </member>
        <member name="T:X360.Security.Cryptography.CRC32">
            <summary>
            CRC32 Checksums
            </summary>
        </member>
        <member name="M:X360.Security.Cryptography.CRC32.#ctor">
            <summary>
            Initializes a default CRC checksum instance
            </summary>
        </member>
        <member name="M:X360.Security.Cryptography.CRC32.#ctor(System.UInt32)">
            <summary>
            Initializes a custom CRC checksum instance
            </summary>
            <param name="Polynomial"></param>
        </member>
        <member name="M:X360.Security.Cryptography.CRC32.AddToCRC(System.Byte)">
            <summary>
            Adds a byte to the checksum
            </summary>
            <param name="xAdd"></param>
        </member>
        <member name="M:X360.Security.Cryptography.CRC32.AddToCRC(System.Byte[])">
            <summary>
            Adds a byte array to the checksum
            </summary>
            <param name="xAdd"></param>
        </member>
        <member name="P:X360.Security.Cryptography.CRC32.CRC">
            <summary>Current Checksum</summary>
        </member>
        <member name="T:X360.Security.Cryptography.ScrambleMethods">
            <summary>
            Scrambling methods used in this .DLL
            </summary>
        </member>
        <member name="M:X360.Security.Cryptography.ScrambleMethods.StockScramble(System.Byte[],System.Boolean)">
            <summary>
            Swaps bytes in 8 byte blocks, xReverse true if reverse each 8 byte blocks
            </summary>
            <param name="xPiece"></param>
            <param name="xReverse"></param>
            <returns></returns>
        </member>
        <member name="M:X360.Security.Cryptography.ScrambleMethods.DevScramble(System.Byte[])">
            <summary>
            Reverses all bytes
            </summary>
            <param name="xPiece"></param>
            <returns></returns>
        </member>
        <member name="M:X360.Security.Cryptography.ScrambleMethods.DJScramble(System.Byte[])">
            <summary>
            Special scramble method
            </summary>
            <param name="xPiece"></param>
            <returns></returns>
        </member>
        <member name="T:X360.Security.Cryptography.RSAQuick">
            <summary>
            Create and verify PKS1 Signatures of SHA1 digest
            </summary>
        </member>
        <member name="M:X360.Security.Cryptography.RSAQuick.SignatureGenerate(System.Security.Cryptography.RSAParameters,System.Byte[])">
            <summary>
            Generate a PKS1 Signature of SHA1 digest
            </summary>
            <param name="xParam"></param>
            <param name="xHash"></param>
            <returns></returns>
        </member>
        <member name="M:X360.Security.Cryptography.RSAQuick.SignatureVerify(System.Security.Cryptography.RSAParameters,System.Byte[],System.Byte[])">
            <summary>
            Verifies a PKS1 signature of SHA1 digest
            </summary>
            <param name="xParam">Keys</param>
            <param name="xHash">Hash to sign</param>
            <param name="xSignature">Outputs the signature</param>
            <returns></returns>
        </member>
        <member name="M:X360.Security.Cryptography.RSAQuick.CreateKeys">
            <summary>
            Generates a new set of keys
            </summary>
            <returns></returns>
        </member>
        <member name="T:X360.Security.Cryptography.SHA1Quick">
            <summary>
            Initializes a new instance of a SHA1 hash
            </summary>
        </member>
        <member name="M:X360.Security.Cryptography.SHA1Quick.ComputeHash(System.Byte[])">
            <summary>
            Computes a SHA1 hash on specified data
            </summary>
            <param name="xData"></param>
            <returns></returns>
        </member>
        <member name="T:X360.AddType">
            <summary>
            File manipulation type
            </summary>
        </member>
        <member name="F:X360.AddType.NoOverWrite">
            <summary>
            Do not over write the file if existant
            </summary>
        </member>
        <member name="F:X360.AddType.Inject">
            <summary>
            Over write the file
            </summary>
        </member>
        <member name="F:X360.AddType.Replace">
            <summary>
            Safely write the new file
            </summary>
        </member>
        <member name="T:X360.STFS.Languages">
            <summary>
            Xbox Languages
            </summary>
        </member>
        <member name="F:X360.STFS.Languages.English">
            <summary>
            English
            </summary>
        </member>
        <member name="F:X360.STFS.Languages.Japanese">
            <summary>
            Japanese
            </summary>
        </member>
        <member name="F:X360.STFS.Languages.German">
            <summary>
            German
            </summary>
        </member>
        <member name="F:X360.STFS.Languages.French">
            <summary>
            French
            </summary>
        </member>
        <member name="F:X360.STFS.Languages.Spanish">
            <summary>
            Spanish
            </summary>
        </member>
        <member name="F:X360.STFS.Languages.Italian">
            <summary>
            Itialian
            </summary>
        </member>
        <member name="F:X360.STFS.Languages.Korean">
            <summary>
            Korean
            </summary>
        </member>
        <member name="F:X360.STFS.Languages.Chinese">
            <summary>
            Chinese
            </summary>
        </member>
        <member name="F:X360.STFS.Languages.Portuguese">
            <summary>
            Portuguese 
            </summary>
        </member>
        <member name="T:X360.STFS.STFSType">
            <summary>
            STFS structure type
            </summary>
        </member>
        <member name="F:X360.STFS.STFSType.Type0">
            <summary>Type 0</summary>
        </member>
        <member name="F:X360.STFS.STFSType.Type1">
            <summary>Type 1</summary>
        </member>
        <member name="T:X360.STFS.PackageType">
            <summary>
            Xbox Package type
            </summary>
        </member>
        <member name="F:X360.STFS.PackageType.None">
            <summary>No package type</summary>
        </member>
        <member name="F:X360.STFS.PackageType.SavedGame">
            <summary>Game save</summary>
        </member>
        <member name="F:X360.STFS.PackageType.MarketPlace">
            <summary>Market place item</summary>
        </member>
        <member name="F:X360.STFS.PackageType.Publisher">
            <summary>Unknown</summary>
        </member>
        <member name="F:X360.STFS.PackageType.IPTV_DVR">
            <summary>IPTV DVR</summary>
        </member>
        <member name="F:X360.STFS.PackageType.Xbox360Title">
            <summary>Unknown</summary>
        </member>
        <member name="F:X360.STFS.PackageType.IPTV_PauseBuffer">
            <summary>IPTV Buffer</summary>
        </member>
        <member name="F:X360.STFS.PackageType.XNACommunity">
            <summary>XNA Game?</summary>
        </member>
        <member name="F:X360.STFS.PackageType.HDDInstalledGame">
            <summary>Hard drive installed game</summary>
        </member>
        <member name="F:X360.STFS.PackageType.OriginalXboxGame">
            <summary>Original game</summary>
        </member>
        <member name="F:X360.STFS.PackageType.SocialTitle">
            <summary>Unknown</summary>
        </member>
        <member name="F:X360.STFS.PackageType.GamesOnDemand">
            <summary>Games on demand</summary>
        </member>
        <member name="F:X360.STFS.PackageType.SystemPacks">
            <summary>Unknown</summary>
        </member>
        <member name="F:X360.STFS.PackageType.AvatarItem">
            <summary>Avatar item</summary>
        </member>
        <member name="F:X360.STFS.PackageType.Profile">
            <summary>Xbox 360 title</summary>
        </member>
        <member name="F:X360.STFS.PackageType.GamerPicture">
            <summary>Xbox profile gamerpictures</summary>
        </member>
        <member name="F:X360.STFS.PackageType.ThematicSkin">
            <summary>Xbox theme skin</summary>
        </member>
        <member name="F:X360.STFS.PackageType.Cache">
            <summary>System cache?</summary>
        </member>
        <member name="F:X360.STFS.PackageType.StorageDownload">
            <summary>Unknown</summary>
        </member>
        <member name="F:X360.STFS.PackageType.XboxSavedGame">
            <summary>Unknown</summary>
        </member>
        <member name="F:X360.STFS.PackageType.XboxDownload">
            <summary>Unknown</summary>
        </member>
        <member name="F:X360.STFS.PackageType.GameDemo">
            <summary>Game Demo</summary>
        </member>
        <member name="F:X360.STFS.PackageType.Video">
            <summary>Video</summary>
        </member>
        <member name="F:X360.STFS.PackageType.GameTitle">
            <summary>Unknown</summary>
        </member>
        <member name="F:X360.STFS.PackageType.Installer">
            <summary>Unknown</summary>
        </member>
        <member name="F:X360.STFS.PackageType.GameTrailer">
            <summary>Game trailer</summary>
        </member>
        <member name="F:X360.STFS.PackageType.Arcade">
            <summary></summary>
        </member>
        <member name="F:X360.STFS.PackageType.XNA">
            <summary>XNA Launcher?</summary>
        </member>
        <member name="F:X360.STFS.PackageType.LicenseStore">
            <summary>Xbox Licenses</summary>
        </member>
        <member name="F:X360.STFS.PackageType.Movie">
            <summary>Marketplace movie</summary>
        </member>
        <member name="F:X360.STFS.PackageType.TV">
            <summary>Marketplace TV show</summary>
        </member>
        <member name="F:X360.STFS.PackageType.MusicVideo">
            <summary>Marketplace Music Video</summary>
        </member>
        <member name="F:X360.STFS.PackageType.GameVideo">
            <summary>Unknown</summary>
        </member>
        <member name="F:X360.STFS.PackageType.PodcastVideo">
            <summary>Podcast video</summary>
        </member>
        <member name="F:X360.STFS.PackageType.ViralVideo">
            <summary>Unknown</summary>
        </member>
        <member name="T:X360.STFS.PackageMagic">
            <summary>
            STFS package magic
            </summary>
        </member>
        <member name="F:X360.STFS.PackageMagic.CON">
            <summary>Console signed</summary>
        </member>
        <member name="F:X360.STFS.PackageMagic.LIVE">
            <summary>Xbox Live Server Signed</summary>
        </member>
        <member name="F:X360.STFS.PackageMagic.PIRS">
            <summary>Xbox Distribution Signed</summary>
        </member>
        <member name="F:X360.STFS.PackageMagic.Unknown">
            <summary>Unknown Magic</summary>
        </member>
        <member name="T:X360.STFS.STFSExcepts">
            <summary>
            STFS exceptions
            </summary>
        </member>
        <member name="P:X360.STFS.STFSExcepts.ParseError">
            <summary>Parse Error</summary>
        </member>
        <member name="P:X360.STFS.STFSExcepts.WriteError">
            <summary>Write Error</summary>
        </member>
        <member name="P:X360.STFS.STFSExcepts.IOAccess">
            <summary>Stream error</summary>
        </member>
        <member name="P:X360.STFS.STFSExcepts.General">
            <summary>Unknown error</summary>
        </member>
        <member name="P:X360.STFS.STFSExcepts.NotStrong">
            <summary>Not LIVE/PIRS</summary>
        </member>
        <member name="P:X360.STFS.STFSExcepts.EntryCount">
            <summary>Entry Count error</summary>
        </member>
        <member name="P:X360.STFS.STFSExcepts.Type">
            <summary>Invalid STFS Type</summary>
        </member>
        <member name="P:X360.STFS.STFSExcepts.Unsuccessful">
            <summary>Unsuccessful function run</summary>
        </member>
        <member name="P:X360.STFS.STFSExcepts.InUse">
            <summary>File in use</summary>
        </member>
        <member name="P:X360.STFS.STFSExcepts.Game">
            <summary>Game package, not STFS</summary>
        </member>
        <member name="P:X360.STFS.STFSExcepts.ThemeError">
            <summary>Theme error</summary>
        </member>
        <member name="P:X360.STFS.STFSExcepts.InvalChars">
            <summary>Contains Invalid characters</summary>
        </member>
        <member name="P:X360.STFS.STFSExcepts.InvalBlock">
            <summary>Bad Block</summary>
        </member>
        <member name="P:X360.STFS.STFSExcepts.MaxOver">
            <summary>Max count error</summary>
        </member>
        <member name="T:X360.STFS.StrongSigned">
            <summary>
            Strong signed indication
            </summary>
        </member>
        <member name="F:X360.STFS.StrongSigned.LIVE">
            <summary>Xbox Live Server Signed</summary>
        </member>
        <member name="F:X360.STFS.StrongSigned.PIRS">
            <summary>Microsoft Distributional Strong Signed</summary>
        </member>
        <member name="T:X360.STFS.RSAParams">
            <summary>Parameters to sign</summary>
        </member>
        <member name="M:X360.STFS.RSAParams.#ctor(X360.IO.DJsIO)">
            <summary>
            Import RSA attributes from an Xbox360 Keyvault for CON
            </summary>
            <param name="xKV"></param>
        </member>
        <member name="M:X360.STFS.RSAParams.#ctor(System.String)">
            <summary>
            Impor RSA attributes from an Xbox360 Keyvault location for Con
            </summary>
            <param name="xKVLocation"></param>
        </member>
        <member name="M:X360.STFS.RSAParams.#ctor(X360.STFS.StrongSigned)">
            <summary>
            Initializes a Strong Signed key type of Kit 360's
            </summary>
            <param name="xTypeIn"></param>
        </member>
        <member name="P:X360.STFS.RSAParams.Certificate">
            <summary>
            Returns Certificate (has contents only when from a KV)
            </summary>
        </member>
        <member name="P:X360.STFS.RSAParams.RSAKeys">
            <summary>
            Returns the RSA Parameters for this instance (only works if valid)
            </summary>
        </member>
        <member name="P:X360.STFS.RSAParams.Type">
            <summary>
            Returns the magic type of this instance
            </summary>
        </member>
        <member name="P:X360.STFS.RSAParams.Valid">
            <summary>
            Gets a bool whether this instance is valid for Signing or not
            </summary>
        </member>
        <member name="T:X360.STFS.Verified">
            <summary>
            Object to return status of verification
            </summary>
        </member>
        <member name="P:X360.STFS.Verified.InputLocale">
            <summary>Input location</summary>
        </member>
        <member name="P:X360.STFS.Verified.VerifyLocale">
            <summary>Recorded location</summary>
        </member>
        <member name="P:X360.STFS.Verified.ThisType">
            <summary>Verification type</summary>
        </member>
        <member name="P:X360.STFS.Verified.IsValid">
            <summary>Returns if this is verified or invalid</summary>
        </member>
        <member name="T:X360.STFS.ItemType">
            <summary>
            Verification type
            </summary>
        </member>
        <member name="F:X360.STFS.ItemType.Data">
            <summary>Data block hash</summary>
        </member>
        <member name="F:X360.STFS.ItemType.TableTree0">
            <summary>Hash table level 0 hash</summary>
        </member>
        <member name="F:X360.STFS.ItemType.TableTree1">
            <summary>Hash table level 1 hash</summary>
        </member>
        <member name="F:X360.STFS.ItemType.Master">
            <summary>Master hash</summary>
        </member>
        <member name="F:X360.STFS.ItemType.Header">
            <summary>Header hash</summary>
        </member>
        <member name="F:X360.STFS.ItemType.Signature">
            <summary>Data Digest RSA Signature</summary>
        </member>
        <member name="F:X360.STFS.ItemType.Certificate">
            <summary>Certificate Digest RSA Signature</summary>
        </member>
        <member name="T:X360.STFS.TransferLock">
            <summary>
            Package transferring
            </summary>
        </member>
        <member name="F:X360.STFS.TransferLock.NoTransfer">
            <summary>No transferring</summary>
        </member>
        <member name="F:X360.STFS.TransferLock.ProfileAllowOnly">
            <summary>Allow transferring between the profile</summary>
        </member>
        <member name="F:X360.STFS.TransferLock.DeviceAllowOnly">
            <summary>Allow transferring between the device</summary>
        </member>
        <member name="F:X360.STFS.TransferLock.AllowTransfer">
            <summary>Allow profile and device transferring</summary>
        </member>
        <member name="T:X360.SVOD.SVODExcepts">
            <summary>
            SVOD package exceptions
            </summary>
        </member>
        <member name="P:X360.SVOD.SVODExcepts.Size">
            <summary>Data file error</summary>
        </member>
        <member name="P:X360.SVOD.SVODExcepts.Unknown">
            <summary>Unknown error</summary>
        </member>
        <member name="P:X360.SVOD.SVODExcepts.Count">
            <summary>Count error</summary>
        </member>
        <member name="P:X360.SVOD.SVODExcepts.Access">
            <summary>Stream access error</summary>
        </member>
        <member name="T:X360.SVOD.SVODPackage">
            <summary>
            SVOD Handler
            </summary>
        </member>
        <member name="M:X360.SVOD.SVODPackage.#ctor(X360.IO.DJsIO,System.String)">
            <summary>Initialize the package via header info
            <param name="xHeaderIO">Stream to header information</param>
            <param name="xDataPath">Path of data files, null if you want to want to load header only</param>
            </summary>
        </member>
        <member name="M:X360.SVOD.SVODPackage.#ctor(System.String,System.String)">
            <summary>Initialize the package via header info
            <param name="FileLocale">Location to SVOD Header</param>
            <param name="xDataPath">Path of data files, null if you want to want to load header only</param>
            </summary>
        </member>
        <member name="M:X360.SVOD.SVODPackage.ExtractData(X360.IO.DJsIO)">
            <summary>
            Extract the data of the package
            </summary>
            <param name="xIOOut"></param>
            <returns></returns>
        </member>
        <member name="M:X360.SVOD.SVODPackage.LoadData(System.String)">
            <summary>
            Loads data
            </summary>
            <param name="xDataPath"></param>
            <returns></returns>
        </member>
        <member name="M:X360.SVOD.SVODPackage.WriteHeader(X360.STFS.RSAParams)">
            <summary>
            Writes and signs the header
            </summary>
            <param name="xParams"></param>
            <returns></returns>
        </member>
        <member name="M:X360.SVOD.SVODPackage.FixPackage(X360.STFS.RSAParams)">
            <summary>
            Will only work wif your own KV, possibly strong signed
            </summary>
            <param name="xParams"></param>
            <returns></returns>
        </member>
        <member name="M:X360.SVOD.SVODPackage.Close">
            <summary>
            Close IO's
            </summary>
            <returns></returns>
        </member>
        <member name="P:X360.SVOD.SVODPackage.Header">
            <summary>Header information</summary>
        </member>
        <member name="P:X360.SVOD.SVODPackage.IsValid">
            <summary>Tells if package is valid</summary>
        </member>
        <member name="P:X360.SVOD.SVODPackage.Deviation">
            <summary>Package deviation</summary>
        </member>
        <member name="P:X360.SVOD.SVODPackage.FileNameLong">
            <summary>
            File name
            </summary>
        </member>
        <member name="P:X360.SVOD.SVODPackage.FileParentPath">
            <summary>
            File Path
            </summary>
        </member>
        <member name="T:X360.STFS.ItemEntry">
            <summary>
            Base class for STFS items
            </summary>
        </member>
        <member name="M:X360.STFS.ItemEntry.Delete">
            <summary>
            Deletes entry
            </summary>
            <returns></returns>
        </member>
        <member name="M:X360.STFS.ItemEntry.GetEntryData">
            <summary>
            Grabs the binary data representation
            </summary>
            <returns></returns>
        </member>
        <member name="M:X360.STFS.ItemEntry.WriteEntry">
            <summary>
            Writes the binary data
            </summary>
            <returns></returns>
        </member>
        <member name="M:X360.STFS.ItemEntry.GetPath">
            <summary>
            Grabsthe path
            </summary>
            <returns></returns>
        </member>
        <member name="P:X360.STFS.ItemEntry.Created">
            <summary>
            Time Created
            </summary>
        </member>
        <member name="P:X360.STFS.ItemEntry.Size">
            <summary>
            Entry size
            </summary>
        </member>
        <member name="P:X360.STFS.ItemEntry.Accessed">
            <summary>
            Time last accessed
            </summary>
        </member>
        <member name="P:X360.STFS.ItemEntry.UnknownFlag">
            <summary>
            Unknown flag
            </summary>
        </member>
        <member name="P:X360.STFS.ItemEntry.FolderPointer">
            <summary>
            Parent directory pointer
            </summary>
        </member>
        <member name="P:X360.STFS.ItemEntry.IsDeleted">
            <summary>
            Deleted flag
            </summary>
        </member>
        <member name="P:X360.STFS.ItemEntry.DirectoryOffset">
            <summary>
            Offset in the package
            </summary>
        </member>
        <member name="P:X360.STFS.ItemEntry.FolderFlag">
            <summary>
            Is a folder
            </summary>
        </member>
        <member name="P:X360.STFS.ItemEntry.Name">
            <summary>
            Entry name
            </summary>
        </member>
        <member name="P:X360.STFS.ItemEntry.EntryID">
            <summary>
            Entry ID
            </summary>
        </member>
        <member name="P:X360.STFS.ItemEntry.StartBlock">
            <summary>
            Start Blocm
            </summary>
        </member>
        <member name="P:X360.STFS.ItemEntry.BlockCount">
            <summary>
            Block Count
            </summary>
        </member>
        <member name="T:X360.STFS.FileEntry">
            <summary>
            Object for STFS File Entry
            </summary>
        </member>
        <member name="M:X360.STFS.FileEntry.FixHashes(X360.STFS.RSAParams)">
            <summary>
            Fixes the hashes of the file
            </summary>
            <param name="SignTypeOrNull"></param>
            <returns></returns>
        </member>
        <member name="M:X360.STFS.FileEntry.Replace(X360.IO.DJsIO)">
            <summary>
            Replace the file via IO
            </summary>
            <param name="xIOIn"></param>
            <returns></returns>
        </member>
        <member name="M:X360.STFS.FileEntry.Replace(System.String)">
            <summary>
            Replace the file via File Location
            </summary>
            <param name="FileIn"></param>
            <returns></returns>
        </member>
        <member name="M:X360.STFS.FileEntry.Extract(System.String,System.String)">
            <summary>
            Extracts the entry via user selection
            </summary>
            <param name="DialogTitle"></param>
            <param name="DialogFilter"></param>
            <returns></returns>
        </member>
        <member name="M:X360.STFS.FileEntry.Extract(System.String)">
            <summary>
            Extracts entry to a location
            </summary>
            <param name="FileOut"></param>
            <returns></returns>
        </member>
        <member name="M:X360.STFS.FileEntry.Inject(X360.IO.DJsIO)">
            <summary>
            Overwrites the file data from an IO
            </summary>
            <param name="xIOin"></param>
            <returns></returns>
        </member>
        <member name="M:X360.STFS.FileEntry.Inject(System.String)">
            <summary>
            Overwrites the data from a file location
            </summary>
            <param name="FileIn"></param>
            <returns></returns>
        </member>
        <member name="M:X360.STFS.FileEntry.GrabSTFSStream(System.Boolean,System.Boolean)">
            <summary>
            Returns a real time STFS file stream
            </summary>
            <param name="MakeCopy"></param>
            <param name="BigEndian"></param>
            <returns></returns>
        </member>
        <member name="M:X360.STFS.FileEntry.GetTempIO(System.Boolean)">
            <summary>
            Extracts the file to a temporary location
            </summary>
            <param name="BigEndian"></param>
            <returns></returns>
        </member>
        <member name="T:X360.STFS.FolderEntry">
            <summary>
            Class for STFS Folder items
            </summary>
        </member>
        <member name="M:X360.STFS.FolderEntry.Extract(System.String,System.Boolean)">
            <summary>
            Extract the files
            </summary>
            <param name="xOutLocale"></param>
            <param name="xIncludeSubItems"></param>
            <returns></returns>
        </member>
        <member name="M:X360.STFS.FolderEntry.Extract(System.Boolean,System.String)">
            <summary>
            Extract the files
            </summary>
            <param name="xIncludeSubItems"></param>
            <param name="xDescription"></param>
            <returns></returns>
        </member>
        <member name="M:X360.STFS.FolderEntry.GetSubFolders">
            <summary>
            Grabs the subfolders
            </summary>
            <returns></returns>
        </member>
        <member name="M:X360.STFS.FolderEntry.GetSubFiles">
            <summary>
            Grabs the files
            </summary>
            <returns></returns>
        </member>
        <member name="T:X360.STFS.STFSLicense">
            <summary>
            Class for STFS Licenses
            </summary>
        </member>
        <member name="M:X360.STFS.STFSLicense.Clear">
            <summary>
            Clear all licenses
            </summary>
            <returns></returns>
        </member>
        <member name="P:X360.STFS.STFSLicense.ID">
            <summary>
            ID
            </summary>
        </member>
        <member name="P:X360.STFS.STFSLicense.Var1">
            <summary>
            Bits
            </summary>
        </member>
        <member name="P:X360.STFS.STFSLicense.Flags">
            <summary>
            Flags
            </summary>
        </member>
        <member name="T:X360.STFS.HeaderData">
            <summary>
            Class for Header info
            </summary>
        </member>
        <member name="F:X360.STFS.HeaderData.MetaDataVersion">
            <summary>
            Meta Data Version
            </summary>
        </member>
        <member name="F:X360.STFS.HeaderData.MediaID">
            <summary>
            Media ID
            </summary>
        </member>
        <member name="F:X360.STFS.HeaderData.Version_">
            <summary>
            Version
            </summary>
        </member>
        <member name="F:X360.STFS.HeaderData.Version_Base">
            <summary>
            Base Version
            </summary>
        </member>
        <member name="F:X360.STFS.HeaderData.TitleID">
            <summary>
            Title ID
            </summary>
        </member>
        <member name="F:X360.STFS.HeaderData.Platform">
            <summary>
            Platform
            </summary>
        </member>
        <member name="F:X360.STFS.HeaderData.ExecutableType">
            <summary>
            Executable Type
            </summary>
        </member>
        <member name="F:X360.STFS.HeaderData.DiscNumber">
            <summary>
            Disc Number
            </summary>
        </member>
        <member name="F:X360.STFS.HeaderData.DiscInSet">
            <summary>
            Disc In Set
            </summary>
        </member>
        <member name="F:X360.STFS.HeaderData.SaveGameID">
            <summary>
            Save Game ID
            </summary>
        </member>
        <member name="F:X360.STFS.HeaderData.DataFileCount">
            <summary>
            Data File Count
            </summary>
        </member>
        <member name="F:X360.STFS.HeaderData.DataFileSize">
            <summary>
            Data File Size
            </summary>
        </member>
        <member name="F:X360.STFS.HeaderData.Reserved">
            <summary>
            Reserved
            </summary>
        </member>
        <member name="F:X360.STFS.HeaderData.SeasonNumber">
            <summary>
            Season Number
            </summary>
        </member>
        <member name="F:X360.STFS.HeaderData.EpidsodeNumber">
            <summary>
            Episode Number
            </summary>
        </member>
        <member name="F:X360.STFS.HeaderData.ProfileID">
            <summary>
            Profile ID
            </summary>
        </member>
        <member name="M:X360.STFS.HeaderData.#ctor">
            <summary>
            Initializes a default object
            </summary>
        </member>
        <member name="M:X360.STFS.HeaderData.SetLanguage(X360.STFS.Languages)">
            <summary>
            Set the language to grab the description/title
            </summary>
            <param name="xDesired"></param>
        </member>
        <member name="M:X360.STFS.HeaderData.ClearLicenses">
            <summary>
            Clear all the licenses
            </summary>
            <returns></returns>
        </member>
        <member name="M:X360.STFS.HeaderData.MakeAnonymous">
            <summary>
            Clears licenses, ID's, and makes the ID's worthless
            </summary>
            <returns></returns>
        </member>
        <member name="M:X360.STFS.HeaderData.AddLicense(System.Int64,System.Int32,System.Int32)">
            <summary>
            Attempts to add a license
            </summary>
            <param name="ID"></param>
            <param name="Bits"></param>
            <param name="Flags"></param>
            <returns></returns>
        </member>
        <member name="M:X360.STFS.HeaderData.UnlockDLC">
            <summary>
            Allows a DLC to be unlocked
            </summary>
            <returns></returns>
        </member>
        <member name="P:X360.STFS.HeaderData.Magic">
            <summary>
            Signature type
            </summary>
        </member>
        <member name="P:X360.STFS.HeaderData.IDTransfer">
            <summary>
            Transfer flags
            </summary>
        </member>
        <member name="P:X360.STFS.HeaderData.ThisType">
            <summary>
            Package type
            </summary>
        </member>
        <member name="P:X360.STFS.HeaderData.Liscenses">
            <summary>
            STFS Licenses
            </summary>
        </member>
        <member name="P:X360.STFS.HeaderData.RecordedContentSize">
            <summary>
            STFS Licenses
            </summary>
        </member>
        <member name="P:X360.STFS.HeaderData.SeriesID">
            <summary>
            Series ID
            </summary>
        </member>
        <member name="P:X360.STFS.HeaderData.SeasonID">
            <summary>
            Season ID
            </summary>
        </member>
        <member name="P:X360.STFS.HeaderData.SaveConsoleID">
            <summary>
            Console ID (creator)
            </summary>
        </member>
        <member name="P:X360.STFS.HeaderData.DeviceID">
            <summary>
            Device ID
            </summary>
        </member>
        <member name="P:X360.STFS.HeaderData.Description">
            <summary>
            Description
            </summary>
        </member>
        <member name="P:X360.STFS.HeaderData.Title_Display">
            <summary>
            Display Title
            </summary>
        </member>
        <member name="P:X360.STFS.HeaderData.Title_Package">
            <summary>
            Package Title
            </summary>
        </member>
        <member name="P:X360.STFS.HeaderData.Publisher">
            <summary>
            Publisher
            </summary>
        </member>
        <member name="P:X360.STFS.HeaderData.ContentImage">
            <summary>
            Content image
            </summary>
        </member>
        <member name="P:X360.STFS.HeaderData.PackageImage">
            <summary>
            Package image
            </summary>
        </member>
        <member name="P:X360.STFS.HeaderData.PackageImageBinary">
            <summary>
            Bytes of the Package image
            </summary>
        </member>
        <member name="P:X360.STFS.HeaderData.ContentImageBinary">
            <summary>
            Bytes of the Content image
            </summary>
        </member>
        <member name="T:X360.STFS.STFSPackage">
            <summary>
            
            </summary>
        </member>
        <member name="M:X360.STFS.STFSPackage.xExtractPayload(System.String,System.Boolean,System.Boolean)">
            <summary>
            Extracts via out locale
            </summary>
            <param name="xOutLocale"></param>
            <param name="xIncludeSubItems"></param>
            <param name="xIncludeHeader"></param>
            <returns></returns>
        </member>
        <member name="M:X360.STFS.STFSPackage.AddToLog(System.String)">
            <summary>
            Adds to log
            </summary>
            <param name="xInput"></param>
        </member>
        <member name="M:X360.STFS.STFSPackage.ParseCheck">
            <summary>
            Checks to see if the package was parsed
            </summary>
            <returns></returns>
        </member>
        <member name="M:X360.STFS.STFSPackage.ActiveCheck">
            <summary>
            Checks if the package is fine
            </summary>
            <returns></returns>
        </member>
        <member name="M:X360.STFS.STFSPackage.GetBlocks(System.UInt32,System.UInt32,X360.STFS.BlockRecord[]@)">
            <summary>
            Returns the blocks of a file
            </summary>
            <param name="xCount"></param>
            <param name="xStartBlock"></param>
            <param name="xOutBlocks"></param>
            <returns></returns>
        </member>
        <member name="M:X360.STFS.STFSPackage.XTakeHash(System.Int64,System.Int64,System.Int32)">
            <summary>
            Writes a SHA1 hash from base IO
            </summary>
            <param name="xRead"></param>
            <param name="xWrite"></param>
            <param name="xSize"></param>
            <returns></returns>
        </member>
        <member name="M:X360.STFS.STFSPackage.XTakeHash(System.Int64,System.Int64,System.Int32,X360.IO.DJsIO@)">
            <summary>
            Writes a SHA1 hash reading from base IO to another IO
            </summary>
            <param name="xRead"></param>
            <param name="xWrite"></param>
            <param name="xSize"></param>
            <param name="io"></param>
            <returns></returns>
        </member>
        <member name="M:X360.STFS.STFSPackage.XTakeHash(X360.IO.DJsIO@,System.Int64,System.Int64,System.Int32,X360.IO.DJsIO@)">
            <summary>
            Reads from one IO, hashes, stores it in another IO
            </summary>
            <param name="ioin"></param>
            <param name="xRead"></param>
            <param name="xWrite"></param>
            <param name="xSize"></param>
            <param name="ioout"></param>
            <returns></returns>
        </member>
        <member name="M:X360.STFS.STFSPackage.XVerifyHash(System.Int64,System.Int32,System.Byte[]@)">
            <summary>
            Returns a bool if the corresponding offset/hash is the same
            </summary>
            <param name="xRead"></param>
            <param name="xSize"></param>
            <param name="xHash"></param>
            <returns></returns>
        </member>
        <member name="M:X360.STFS.STFSPackage.xEntriesToFile(X360.IO.DJsIO@)">
            <summary>
            Produces a file via entries
            </summary>
            <param name="xFile"></param>
            <returns></returns>
        </member>
        <member name="M:X360.STFS.STFSPackage.xWriteTo(X360.IO.DJsIO@,X360.STFS.BlockRecord[])">
            <summary>
            Writes a file via blocks
            </summary>
            <param name="xIOIn"></param>
            <param name="xBlocks"></param>
            <returns></returns>
        </member>
        <member name="M:X360.STFS.STFSPackage.xDoAdd(X360.IO.DJsIO@,X360.STFS.BlockRecord[]@,X360.STFS.BlockRecord[]@)">
            <summary>
            Add a file to the package
            </summary>
            <param name="xIOIn"></param>
            <param name="xEntAlloc"></param>
            <param name="xFileAlloc"></param>
            <returns></returns>
        </member>
        <member name="M:X360.STFS.STFSPackage.xWriteDescriptor(X360.IO.DJsIO@)">
            <summary>
            Writes the STFS Descriptor to make perm. changes
            </summary>
            <returns></returns>
        </member>
        <member name="M:X360.STFS.STFSPackage.GenerateDataOffset(System.UInt32)">
            <summary>
            Generates the data location of the block
            </summary>
            <param name="xBlock"></param>
            <returns></returns>
        </member>
        <member name="M:X360.STFS.STFSPackage.GenerateHashOffset(System.UInt32,X360.STFS.TreeLevel)">
            <summary>
            Generates a hash offset via block
            </summary>
            <param name="xBlock"></param>
            <param name="xTree"></param>
            <returns></returns>
        </member>
        <member name="M:X360.STFS.STFSPackage.GenerateBaseOffset(System.UInt32,X360.STFS.TreeLevel)">
            <summary>
            Generates the Hash Base
            </summary>
            <param name="xBlock"></param>
            <param name="xTree"></param>
            <returns></returns>
        </member>
        <member name="M:X360.STFS.STFSPackage.VerifySignature(System.Boolean)">
            <summary>
            Verifies the Header signature
            </summary>
            <param name="xDev"></param>
            <returns></returns>
        </member>
        <member name="M:X360.STFS.STFSPackage.SetSamePackage(X360.STFS.STFSPackage@)">
            <summary>
            Sets a package comming in to this package
            </summary>
            <param name="xIn"></param>
        </member>
        <member name="M:X360.STFS.STFSPackage.xWriteTables">
            <summary>
            Writes hash tables
            </summary>
            <returns></returns>
        </member>
        <member name="M:X360.STFS.STFSPackage.xWriteHeader(X360.STFS.RSAParams)">
            <summary>
            Writes header to the file
            </summary>
            <param name="xParams"></param>
            <returns></returns>
        </member>
        <member name="M:X360.STFS.STFSPackage.GetFolderNameByID(System.UInt16)">
            <summary>
            Gets a folder name via it's Entry ID
            </summary>
            <param name="ID"></param>
            <returns></returns>
        </member>
        <member name="M:X360.STFS.STFSPackage.xGetFolder(System.UInt16)">
            <summary>
            Gets a folder entry by ID
            </summary>
            <param name="ID"></param>
            <returns></returns>
        </member>
        <member name="M:X360.STFS.STFSPackage.xGetParentFolder(System.String)">
            <summary>
            Gets the last folder before the target ItemEntry
            </summary>
            <param name="Path"></param>
            <returns></returns>
        </member>
        <member name="M:X360.STFS.STFSPackage.xGetFile(System.String,System.UInt16)">
            <summary>
            Searches the files for the name and folder pointer
            </summary>
            <param name="Name"></param>
            <param name="FolderPointer"></param>
            <returns></returns>
        </member>
        <member name="M:X360.STFS.STFSPackage.xAddFile(X360.IO.DJsIO,System.String,System.UInt16)">
            <summary>
            Adds a file to the package
            </summary>
            <param name="xIOIn"></param>
            <param name="xFileName"></param>
            <param name="Folder"></param>
            <returns></returns>
        </member>
        <member name="M:X360.STFS.STFSPackage.xDeleteEntry(X360.STFS.ItemEntry)">
            <summary>
            Deletes an item via its entry
            </summary>
            <param name="x"></param>
        </member>
        <member name="M:X360.STFS.STFSPackage.sortpathct(X360.STFS.CFolderEntry,X360.STFS.CFolderEntry)">
            <summary>
            For sorting folders by path
            </summary>
            <param name="x1"></param>
            <param name="x2"></param>
            <returns></returns>
        </member>
        <member name="M:X360.STFS.STFSPackage.dlcname">
            <summary>
            Gets a name via hash string and Title ID
            </summary>
            <returns></returns>
        </member>
        <member name="M:X360.STFS.STFSPackage.#ctor(X360.Other.LogRecord)">
            <summary>
            Lets user auto select package
            </summary>
        </member>
        <member name="M:X360.STFS.STFSPackage.#ctor(X360.IO.DJsIO,X360.Other.LogRecord)">
            <summary>
            Initializes a package parse from an already accessed file
            </summary>
            <param name="xIOIn"></param>
            <param name="LogIn"></param>
        </member>
        <member name="M:X360.STFS.STFSPackage.#ctor(System.String,X360.Other.LogRecord)">
            <summary>
            Attempts to parse a file from a specific location
            </summary>
            <param name="xLocation"></param>
            <param name="LogIn"></param>
        </member>
        <member name="M:X360.STFS.STFSPackage.#ctor(X360.STFS.CreateSTFS,X360.STFS.RSAParams,System.String,X360.Other.LogRecord)">
            <summary>
            Create an STFS Package
            </summary>
            <param name="xSession"></param>
            <param name="xSigning"></param>
            <param name="xOutPath"></param>
            <param name="LogIn"></param>
        </member>
        <member name="M:X360.STFS.STFSPackage.#ctor(X360.STFS.STFSPackage@)">
            <summary>
            Function for partial classes, importing packages
            </summary>
            <param name="xIn"></param>
        </member>
        <member name="M:X360.STFS.STFSPackage.UpdateHeader(X360.STFS.RSAParams)">
            <summary>
            Updates the information in the header
            </summary>
            <returns></returns>
        </member>
        <member name="M:X360.STFS.STFSPackage.FlushPackage(X360.STFS.RSAParams)">
            <summary>
            Writes Tables and updates Header
            </summary>
            <param name="xParams"></param>
            <returns></returns>
        </member>
        <member name="M:X360.STFS.STFSPackage.VerifyHashTables">
            <summary>
            Returns a List of details containing the package
            </summary>
            <returns></returns>
        </member>
        <member name="M:X360.STFS.STFSPackage.VerifyHeader">
            <summary>
            Verify the header
            </summary>
            <returns></returns>
        </member>
        <member name="M:X360.STFS.STFSPackage.AddFolder(System.String)">
            <summary>
            Adds a folder to the package via the root
            </summary>
            <param name="FolderPath"></param>
            <returns></returns>
        </member>
        <member name="M:X360.STFS.STFSPackage.ExtractPayload(System.String,System.Boolean,System.Boolean)">
            <summary>
            Extracts the package via out location
            </summary>
            <param name="xOutLocale"></param>
            <param name="xIncludeSubItems"></param>
            <param name="xIncludeHeader"></param>
            <returns></returns>
        </member>
        <member name="M:X360.STFS.STFSPackage.ExtractPayload(System.Boolean,System.String,System.Boolean)">
            <summary>
            GUI based extraction
            </summary>
            <param name="xIncludeSubItems"></param>
            <param name="xDescription"></param>
            <param name="xIncludeHeader"></param>
            <returns></returns>
        </member>
        <member name="M:X360.STFS.STFSPackage.GetFile(System.String)">
            <summary>
            Gets a file by path
            </summary>
            <param name="Path"></param>
            <returns></returns>
        </member>
        <member name="M:X360.STFS.STFSPackage.GetFile(System.String,System.UInt16)">
            <summary>
            Gets a file by the name and pointer
            </summary>
            <param name="Name"></param>
            <param name="FolderPointer"></param>
            <returns></returns>
        </member>
        <member name="M:X360.STFS.STFSPackage.GetFolder(System.UInt16)">
            <summary>
            Gets a folder by it's ID
            </summary>
            <param name="FolderID"></param>
            <returns></returns>
        </member>
        <member name="M:X360.STFS.STFSPackage.GetFolder(System.String)">
            <summary>
            Gets a folder by it's path
            </summary>
            <param name="Path"></param>
            <returns></returns>
        </member>
        <member name="M:X360.STFS.STFSPackage.GetFiles(System.UInt16)">
            <summary>
            Grabs the files via the pointer
            </summary>
            <param name="FolderPointer"></param>
            <returns></returns>
        </member>
        <member name="M:X360.STFS.STFSPackage.GetFiles(System.String)">
            <summary>
            Grabs the files via the path
            </summary>
            <param name="FolderPath"></param>
            <returns></returns>
        </member>
        <member name="M:X360.STFS.STFSPackage.MakeFile(System.String,X360.IO.DJsIO,System.UInt16,X360.AddType)">
            <summary>
            Adds a file under a Folder ID
            </summary>
            <param name="Name"></param>
            <param name="xIOIn"></param>
            <param name="FolderID"></param>
            <param name="xType"></param>
            <returns></returns>
        </member>
        <member name="M:X360.STFS.STFSPackage.MakeFile(System.String,X360.IO.DJsIO,X360.AddType)">
            <summary>
            Adds a file
            </summary>
            <param name="Path"></param>
            <param name="xIOIn"></param>
            <param name="xType"></param>
            <returns></returns>
        </member>
        <member name="M:X360.STFS.STFSPackage.MakeBackup(System.String)">
            <summary>
            Backs up this package to a specific location
            </summary>
            <param name="xOutLocation"></param>
            <returns>ya boi</returns>
        </member>
        <member name="M:X360.STFS.STFSPackage.RebuildPackage(X360.STFS.RSAParams)">
            <summary>
            Rebuilds the package using package creation
            </summary>
            <param name="xParams"></param>
            <returns></returns>
        </member>
        <member name="M:X360.STFS.STFSPackage.GetCurrentDLCFileName">
            <summary>
            Returns the name used for DLC names
            </summary>
            <returns></returns>
        </member>
        <member name="M:X360.STFS.STFSPackage.CloseIO">
            <summary>
            Close the IO
            </summary>
            <returns></returns>
        </member>
        <member name="P:X360.STFS.STFSPackage.ParseSuccess">
            <summary>
            Package read correctly
            </summary>
        </member>
        <member name="P:X360.STFS.STFSPackage.Log">
            <summary>
            Log of library production
            </summary>
        </member>
        <member name="P:X360.STFS.STFSPackage.STFSStruct">
            <summary>
            The STFS struct of the package
            </summary>
        </member>
        <member name="P:X360.STFS.STFSPackage.Header">
            <summary>
            Header metadata
            </summary>
        </member>
        <member name="P:X360.STFS.STFSPackage.RootDirectory">
            <summary>
            Root Directory of package
            </summary>
        </member>
        <member name="P:X360.STFS.STFSPackage.FileNameLong">
            <summary>
            File location
            </summary>
        </member>
        <member name="P:X360.STFS.STFSPackage.FileNameShort">
            <summary>
            File Name
            </summary>
        </member>
        <member name="P:X360.STFS.STFSPackage.FilePath">
            <summary>
            File Path
            </summary>
        </member>
        <member name="P:X360.STFS.STFSPackage.FileExtension">
            <summary>
            File Extension
            </summary>
        </member>
        <member name="T:X360.STFS.CItemEntry">
            <summary>
            Class to hold creation entries
            </summary>
        </member>
        <member name="P:X360.STFS.CItemEntry.Path">
            <summary>
            NOT CASE SENSITIVE
            </summary>
        </member>
        <member name="P:X360.STFS.CItemEntry.Name">
            <summary>
            Item name
            </summary>
        </member>
        <member name="T:X360.STFS.CFileEntry">
            <summary>
            Class to hold file entries
            </summary>
        </member>
        <member name="M:X360.STFS.CFileEntry.BlockCount">
            <summary>
            Block count of file
            </summary>
            <returns></returns>
        </member>
        <member name="M:X360.STFS.CFileEntry.GetLength">
            <summary>
            Grabs the length of the item
            </summary>
            <returns></returns>
        </member>
        <member name="P:X360.STFS.CFileEntry.FileLocale">
            <summary>
            Item location
            </summary>
        </member>
        <member name="T:X360.STFS.CFolderEntry">
            <summary>
            Object to hold directory entries
            </summary>
        </member>
        <member name="M:X360.STFS.CFolderEntry.GetFiles">
            <summary>
            Grabs the files under the directory
            </summary>
            <returns></returns>
        </member>
        <member name="T:X360.STFS.SphereColor">
            <summary>
            Sphere colors
            </summary>
        </member>
        <member name="F:X360.STFS.SphereColor.Default">
            <summary>
            Default
            </summary>
        </member>
        <member name="F:X360.STFS.SphereColor.Gray">
            <summary>
            Gray
            </summary>
        </member>
        <member name="F:X360.STFS.SphereColor.Black">
            <summary>
            Black
            </summary>
        </member>
        <member name="F:X360.STFS.SphereColor.RedPink">
            <summary>
            Red-Pink
            </summary>
        </member>
        <member name="F:X360.STFS.SphereColor.Yellow">
            <summary>
            Yellow
            </summary>
        </member>
        <member name="F:X360.STFS.SphereColor.BlueGreen">
            <summary>
            Blue-Green
            </summary>
        </member>
        <member name="F:X360.STFS.SphereColor.BabyBlue">
            <summary>
            Baby Blue
            </summary>
        </member>
        <member name="F:X360.STFS.SphereColor.GrayBlue">
            <summary>
            Gray-Blue
            </summary>
        </member>
        <member name="F:X360.STFS.SphereColor.HighlightPink">
            <summary>
            Highlight Pink
            </summary>
        </member>
        <member name="F:X360.STFS.SphereColor.Tan">
            <summary>
            Tan
            </summary>
        </member>
        <member name="F:X360.STFS.SphereColor.Brown">
            <summary>
            Brown
            </summary>
        </member>
        <member name="F:X360.STFS.SphereColor.Gold">
            <summary>
            Gold
            </summary>
        </member>
        <member name="F:X360.STFS.SphereColor.Green">
            <summary>
            Green
            </summary>
        </member>
        <member name="F:X360.STFS.SphereColor.Magenta">
            <summary>
            Magenta
            </summary>
        </member>
        <member name="F:X360.STFS.SphereColor.Blue">
            <summary>
            Blue
            </summary>
        </member>
        <member name="F:X360.STFS.SphereColor.Violet">
            <summary>
            Violet
            </summary>
        </member>
        <member name="F:X360.STFS.SphereColor.LightGray">
            <summary>
            Light Gray
            </summary>
        </member>
        <member name="T:X360.STFS.DashStyle">
            <summary>
            Dash Style
            </summary>
        </member>
        <member name="F:X360.STFS.DashStyle.Default">
            <summary>
            Default
            </summary>
        </member>
        <member name="F:X360.STFS.DashStyle.Dark">
            <summary>
            Dark
            </summary>
        </member>
        <member name="F:X360.STFS.DashStyle.Light">
            <summary>
            Light
            </summary>
        </member>
        <member name="T:X360.STFS.ThemeParams">
            <summary>
            Theme Params
            </summary>
        </member>
        <member name="M:X360.STFS.ThemeParams.#ctor">
            <summary>
            Creates an instance of this object
            </summary>
        </member>
        <member name="P:X360.STFS.ThemeParams.Sphere">
            <summary>
            Sphere color of instance
            </summary>
        </member>
        <member name="P:X360.STFS.ThemeParams.AvatarLightingDirectional0">
            <summary>
            Avatar Lighting Direction 0
            </summary>
        </member>
        <member name="P:X360.STFS.ThemeParams.AvatarLightingDirectional1">
            <summary>
            Avatar Lighting Direction 1
            </summary>
        </member>
        <member name="P:X360.STFS.ThemeParams.AvatarLightingDirectional2">
            <summary>
            Avatar Lighting Direction 2
            </summary>
        </member>
        <member name="P:X360.STFS.ThemeParams.AvatarLightingDirectional3">
            <summary>
            Avatar Lighting Direction 3
            </summary>
        </member>
        <member name="P:X360.STFS.ThemeParams.AvatarLightingAmbient">
            <summary>
            Avatar Ambient
            </summary>
        </member>
        <member name="P:X360.STFS.ThemeParams.StyleType">
            <summary>
            Style Type
            </summary>
        </member>
        <member name="T:X360.STFS.CreateSTFS">
            <summary>
            Object to create a package
            </summary>
        </member>
        <member name="F:X360.STFS.CreateSTFS.HeaderData">
            <summary>
            Header meta info
            </summary>
        </member>
        <member name="M:X360.STFS.CreateSTFS.#ctor">
            <summary>
            Initializes an instance of this project
            </summary>
        </member>
        <member name="M:X360.STFS.CreateSTFS.AddFile(System.String,System.String)">
            <summary>
            Adds a file via location and its path
            </summary>
            <param name="FileLocation"></param>
            <param name="FilePath"></param>
            <returns></returns>
        </member>
        <member name="M:X360.STFS.CreateSTFS.AddFolder(System.String)">
            <summary>
            Adds a folder
            </summary>
            <param name="FolderPath"></param>
            <returns></returns>
        </member>
        <member name="M:X360.STFS.CreateSTFS.DeleteFolder(System.String)">
            <summary>
            Deletes a folder
            </summary>
            <param name="FolderPath"></param>
            <returns></returns>
        </member>
        <member name="M:X360.STFS.CreateSTFS.DeleteFile(System.String)">
            <summary>
            Deleetes a file
            </summary>
            <param name="FilePath"></param>
            <returns></returns>
        </member>
        <member name="M:X360.STFS.CreateSTFS.GetFile(System.String)">
            <summary>
            Grabs a file via path
            </summary>
            <param name="FilePath"></param>
            <returns></returns>
        </member>
        <member name="M:X360.STFS.CreateSTFS.GetFolder(System.String)">
            <summary>
            Grabs a folder via path
            </summary>
            <param name="FolderPath"></param>
            <returns></returns>
        </member>
        <member name="P:X360.STFS.CreateSTFS.RootPath">
            <summary>
            Root Path
            </summary>
        </member>
        <member name="P:X360.STFS.CreateSTFS.STFSType">
            <summary>
            STFSType
            </summary>
        </member>
        <member name="P:X360.STFS.CreateSTFS.ThemeSettings">
            <summary>
            Theme Settings
            </summary>
        </member>
        <member name="T:System.DLLIdentify">
            <summary></summary>
        </member>
        <member name="P:System.DLLIdentify.Bish">
            <summary></summary>
        </member>
        <member name="T:X360.SVOD.CreateSVOD">
            <summary>
            Create an SVOD package
            </summary>
        </member>
        <member name="M:X360.SVOD.CreateSVOD.#ctor(X360.GDFX.GDFImage,System.String,X360.STFS.HeaderData)">
            <summary>
            Create an instance of this project
            </summary>
            <param name="Image">Image to build from</param>
            <param name="OutFolder">Save location</param>
            <param name="HeaderInfo">Header info</param>
        </member>
        <member name="M:X360.SVOD.CreateSVOD.Create(X360.STFS.RSAParams,X360.STFS.PackageType)">
            <summary>
            Builds the package
            </summary>
            <param name="xParams"></param>
            <param name="ContentType"></param>
            <returns></returns>
        </member>
        <member name="P:X360.SVOD.CreateSVOD.OutLocation">
            <summary>
            Save location of the package
            </summary>
        </member>
        <member name="P:X360.SVOD.CreateSVOD.PackageHeader">
            <summary>
            Header meta data
            </summary>
        </member>
        <member name="T:X360.PublicResources">
            <summary>
            Resource data
            </summary>
        </member>
        <member name="P:X360.PublicResources.DashImage">
            <summary>
            Dash Image
            </summary>
        </member>
        <member name="P:X360.PublicResources.NoImage">
            <summary>
            No Achievement image
            </summary>
        </member>
        <member name="P:X360.PublicResources.Locked">
            <summary>
            Achievement locked image
            </summary>
        </member>
        <member name="P:X360.PublicResources.PawIcon">
            <summary>
            Paw icon
            </summary>
        </member>
        <member name="P:X360.PublicResources.GPL">
            <summary>
            GPL License
            </summary>
        </member>
        <member name="T:X360.Profile.FlagType">
            <summary>
            Achievement lock type
            </summary>
        </member>
        <member name="F:X360.Profile.FlagType.Locked">
            <summary>
            Achievement locked
            </summary>
        </member>
        <member name="F:X360.Profile.FlagType.UnlockedOffline">
            <summary>
            Achievement unlocked offline
            </summary>
        </member>
        <member name="F:X360.Profile.FlagType.UnlockedOnline">
            <summary>
            Achievement unlocked online
            </summary>
        </member>
        <member name="T:X360.Profile.UnlockProcess">
            <summary>
            Auto unlock
            </summary>
        </member>
        <member name="F:X360.Profile.UnlockProcess.Online">
            <summary>
            Online
            </summary>
        </member>
        <member name="F:X360.Profile.UnlockProcess.Offline">
            <summary>
            Offline
            </summary>
        </member>
        <member name="T:X360.Profile.AchievementEntry">
            <summary>
            Object to hold Achievement entries
            </summary>
        </member>
        <member name="T:X360.Profile.XDBFEntry">
            <summary>
            Object to hold XDBF entries
            </summary>
        </member>
        <member name="P:X360.Profile.XDBFEntry.Offset">
            <summary>
            Offset in file
            </summary>
        </member>
        <member name="P:X360.Profile.XDBFEntry.NS">
            <summary>
            Entry type
            </summary>
        </member>
        <member name="P:X360.Profile.XDBFEntry.Size">
            <summary>
            Size of entry
            </summary>
        </member>
        <member name="P:X360.Profile.XDBFEntry.ID">
            <summary>
            ID of entry
            </summary>
        </member>
        <member name="F:X360.Profile.AchievementEntry.Worth">
            <summary>
            Achievement worth
            </summary>
        </member>
        <member name="M:X360.Profile.AchievementEntry.Update">
            <summary>
            Update the entry
            </summary>
            <returns></returns>
        </member>
        <member name="P:X360.Profile.AchievementEntry.ImageID">
            <summary>
            Image pointer
            </summary>
        </member>
        <member name="P:X360.Profile.AchievementEntry.Description1">
            <summary>
            Locked Description
            </summary>
        </member>
        <member name="P:X360.Profile.AchievementEntry.Description2">
            <summary>
            Unlocked Description
            </summary>
        </member>
        <member name="P:X360.Profile.AchievementEntry.Flags">
            <summary>
            Flags
            </summary>
        </member>
        <member name="P:X360.Profile.AchievementEntry.AchievementID">
            <summary>
            Achievement ID
            </summary>
        </member>
        <member name="P:X360.Profile.AchievementEntry.Title">
            <summary>
            Title
            </summary>
        </member>
        <member name="P:X360.Profile.AchievementEntry.Unlocked">
            <summary>
            Is unlocked
            </summary>
        </member>
        <member name="P:X360.Profile.AchievementEntry.LockType">
            <summary>
            Set lock type
            </summary>
        </member>
        <member name="P:X360.Profile.AchievementEntry.UnlockTime">
            <summary>
            Set Unlock time
            </summary>
        </member>
        <member name="T:X360.Profile.GameGPD">
            <summary>
            Object to hold Game GPD data
            </summary>
        </member>
        <member name="T:X360.Profile.GPD">
            <summary>
            Object to hold Game Progress Data
            </summary>
        </member>
        <member name="F:X360.Profile.GPD.TitleID">
            <summary>
            Title ID associated with the file
            </summary>
        </member>
        <member name="M:X360.Profile.GPD.GetSetting(X360.Profile.GPDIDs)">
            <summary>
            Grabs a setting via ID
            </summary>
            <param name="xIDType"></param>
            <returns></returns>
        </member>
        <member name="M:X360.Profile.GPD.GetSetting(X360.Profile.GPDIDs,X360.Profile.SettingType)">
            <summary>
            Grabs a setting via ID and Data type
            </summary>
            <param name="xIDType"></param>
            <param name="xDataType"></param>
            <returns></returns>
        </member>
        <member name="M:X360.Profile.GPD.GetStringByID(System.Int64)">
            <summary>
            Grabs a string via its ID
            </summary>
            <param name="xID"></param>
            <returns></returns>
        </member>
        <member name="M:X360.Profile.GPD.GetImageByID(System.Int64)">
            <summary>
            Grabs an image via ID
            </summary>
            <param name="xID"></param>
            <returns></returns>
        </member>
        <member name="M:X360.Profile.GPD.AddSetting(System.Int64,System.Object,System.Boolean,X360.Profile.SyncType)">
            <summary>
            Adds a setting with sync option
            </summary>
            <param name="ID"></param>
            <param name="Data"></param>
            <param name="AutomaticOverwrite"></param>
            <param name="xType"></param>
            <returns></returns>
        </member>
        <member name="M:X360.Profile.GPD.AddString(System.Int64,System.String,System.Boolean)">
            <summary>
            Adds a string
            </summary>
            <param name="ID"></param>
            <param name="xIn"></param>
            <param name="AutomaticOverwrite"></param>
            <returns></returns>
        </member>
        <member name="M:X360.Profile.GPD.AddImage(System.Drawing.Image,System.Int64,System.Boolean)">
            <summary>
            Adds an image
            </summary>
            <param name="xIn"></param>
            <param name="ID"></param>
            <param name="AutomaticOverWrite"></param>
            <returns></returns>
        </member>
        <member name="M:X360.Profile.GPD.DeleteSetting(System.Int64)">
            <summary>
            Deletes a setting
            </summary>
            <param name="ID"></param>
            <returns></returns>
        </member>
        <member name="M:X360.Profile.GPD.Close">
            <summary>
            Closes the IO
            </summary>
            <returns></returns>
        </member>
        <member name="M:X360.Profile.GPD.GetStream">
            <summary>
            Grabs the stream
            </summary>
            <returns></returns>
        </member>
        <member name="P:X360.Profile.GPD.Images">
            <summary>GPD Images</summary>
        </member>
        <member name="P:X360.Profile.GPD.Strings">
            <summary>GPD Strings</summary>
        </member>
        <member name="P:X360.Profile.GPD.UserSettings">
            <summary>GPD Settings</summary>
        </member>
        <member name="P:X360.Profile.GPD.UnknownData">
            <summary>GPD Unknown Data</summary>
        </member>
        <member name="P:X360.Profile.GPD.IsValid">
            <summary>GPD Parsed correctly</summary>
        </member>
        <member name="P:X360.Profile.GPD.IndexRecords">
            <summary>GPD Sync Indexes</summary>
        </member>
        <member name="P:X360.Profile.GPD.SyncRecords">
            <summary>GPD Sync status'</summary>
        </member>
        <member name="P:X360.Profile.GPD.FileLocation">
            <summary>
            File Location
            </summary>
        </member>
        <member name="M:X360.Profile.GameGPD.CalculateTotalCred">
            <summary>
            Calculate the total credit
            </summary>
            <returns></returns>
        </member>
        <member name="M:X360.Profile.GameGPD.CalculateUnlockCount">
            <summary>
            Calculate the achievements that are unlocked
            </summary>
            <returns></returns>
        </member>
        <member name="M:X360.Profile.GameGPD.CalculatePossibleCred">
            <summary>
            Calculate the total possible credit
            </summary>
            <returns></returns>
        </member>
        <member name="M:X360.Profile.GameGPD.FixCredit(System.UInt32)">
            <summary>
            Apply a specified credit
            </summary>
            <param name="xIn"></param>
            <returns></returns>
        </member>
        <member name="M:X360.Profile.GameGPD.FixUnlockedCount(System.UInt32)">
            <summary>
            Apply a specified unlock count
            </summary>
            <param name="xIn"></param>
            <returns></returns>
        </member>
        <member name="M:X360.Profile.GameGPD.FixCredAndCount">
            <summary>
            Fix the credit and count
            </summary>
            <returns></returns>
        </member>
        <member name="M:X360.Profile.GameGPD.UnlockAll(System.UInt32)">
            <summary>
            Unlock all achievements
            </summary>
            <param name="MinutesBetween"></param>
            <returns></returns>
        </member>
        <member name="M:X360.Profile.GameGPD.EraseGPD">
            <summary>
            Erases Achievement unlocks and Sync Table
            </summary>
            <returns></returns>
        </member>
        <member name="M:X360.Profile.GameGPD.GetAchievementImage(System.Int32)">
            <summary>
            Get achievement image via achievement index
            </summary>
            <param name="xAchievementIndex"></param>
            <returns></returns>
        </member>
        <member name="M:X360.Profile.GameGPD.#ctor(System.String,System.UInt32)">
            <summary>
            Initializes a new case
            </summary>
            <param name="GPDLocale"></param>
            <param name="TitleID"></param>
        </member>
        <member name="P:X360.Profile.GameGPD.Achievements">
            <summary>
            Achievements
            </summary>
        </member>
        <member name="T:X360.STFS.UserInfo">
            <summary>
            Object to hold user strings
            </summary>
        </member>
        <member name="F:X360.STFS.UserInfo.Bio">
            <summary>
            User bio
            </summary>
        </member>
        <member name="F:X360.STFS.UserInfo.Motto">
            <summary>
            User motto
            </summary>
        </member>
        <member name="F:X360.STFS.UserInfo.Name">
            <summary>
            User name
            </summary>
        </member>
        <member name="F:X360.STFS.UserInfo.Location">
            <summary>
            User location
            </summary>
        </member>
        <member name="T:X360.STFS.ProfilePackage">
            <summary>
            Object to handle profiles
            </summary>
        </member>
        <member name="M:X360.STFS.ProfilePackage.#ctor(X360.STFS.STFSPackage@)">
            <summary>
            Initializes an instance
            </summary>
            <param name="x"></param>
        </member>
        <member name="M:X360.STFS.ProfilePackage.#ctor(X360.IO.DJsIO@,X360.Other.LogRecord)">
            <summary>
            Initializes from an IO
            </summary>
            <param name="x"></param>
            <param name="LogIn"></param>
        </member>
        <member name="M:X360.STFS.ProfilePackage.SaveDash">
            <summary>
            Save dash GPD
            </summary>
            <returns></returns>
        </member>
        <member name="M:X360.STFS.ProfilePackage.SaveAccount">
            <summary>
            Save account
            </summary>
            <returns></returns>
        </member>
        <member name="M:X360.STFS.ProfilePackage.ReadGame(System.UInt32,X360.STFS.FileEntry@)">
            <summary>
            Reads a GPD from the Titles Played index of the User GPD
            </summary>
            <param name="ID"></param>
            <param name="xEntry"></param>
            <returns></returns>
        </member>
        <member name="M:X360.STFS.ProfilePackage.LoadProfile">
            <summary>
            Loads the profile at paw
            </summary>
            <returns></returns>
        </member>
        <member name="M:X360.STFS.ProfilePackage.LoadProfile(System.Boolean)">
            <summary>
            Loads the profile information from the package
            </summary>
            <param name="xboth"></param>
            <returns></returns>
        </member>
        <member name="M:X360.STFS.ProfilePackage.MakeHDDAccountCopy(System.String)">
            <summary>
            Makes a copy of an Xbox Live profile into a HDD profile
            (Works only for profiles and if not a HDD profile already)
            </summary>
            <param name="xOutLocation"></param>
            <returns></returns>
        </member>
        <member name="M:X360.STFS.ProfilePackage.UnlockAll(System.UInt32)">
            <summary>
            Unlocks all achievements either Online or Offline
            </summary>
            <param name="MinutesBetween"></param>
            <returns></returns>
        </member>
        <member name="M:X360.STFS.ProfilePackage.GetUserStrings">
            <summary>
            Gets Bio, Motto, Name, and Location
            </summary>
            <returns></returns>
        </member>
        <member name="M:X360.STFS.ProfilePackage.AddGame(X360.Profile.GameGPD)">
            <summary>
            Adds a game to the User GPD
            </summary>
            <param name="xTitleGPD"></param>
            <returns></returns>
        </member>
        <member name="M:X360.STFS.ProfilePackage.SaveProfileInfo(System.String,System.String,System.String,System.String)">
            <summary>
            Adds/Saves profile information, null a string if you don't want to change it, empty string to delete
            </summary>
            <param name="Name"></param>
            <param name="Motto"></param>
            <param name="Location"></param>
            <param name="Bio"></param>
            <returns></returns>
        </member>
        <member name="M:X360.STFS.ProfilePackage.RemovePhDAT">
            <summary>
            Unknown file, but it seems to contain history of achievements or whatever... rape it
            </summary>
            <returns></returns>
        </member>
        <member name="M:X360.STFS.ProfilePackage.DeleteProfileFiles">
            <summary>
            Deletes the files associated to this file (used for closing the file)
            </summary>
            <returns></returns>
        </member>
        <member name="P:X360.STFS.ProfilePackage.UserGPD">
            <summary>
            Dash GPD
            </summary>
        </member>
        <member name="P:X360.STFS.ProfilePackage.IsValidProfile">
            <summary>
            Has Dash and Account
            </summary>
        </member>
        <member name="P:X360.STFS.ProfilePackage.HasDashGPD">
            <summary>
            Has Dash GPD
            </summary>
        </member>
        <member name="P:X360.STFS.ProfilePackage.HasValidAccount">
            <summary>
            Has Account file
            </summary>
        </member>
        <member name="P:X360.STFS.ProfilePackage.UserFile">
            <summary>
            Account
            </summary>
        </member>
        <member name="T:X360.UpdateReturn">
            <summary>
            Object to handle updates
            </summary>
        </member>
        <member name="P:X360.UpdateReturn.NewVersion">
            <summary>
            New Version String
            </summary>
        </member>
        <member name="P:X360.UpdateReturn.DownloadLink">
            <summary>
            Download Link (if applicable)
            </summary>
        </member>
        <member name="P:X360.UpdateReturn.ServerReached">
            <summary>
            Able to locate server
            </summary>
        </member>
        <member name="P:X360.UpdateReturn.NeedsUpdate">
            <summary>
            Update needed
            </summary>
        </member>
        <member name="P:X360.UpdateReturn.UpdateNotes">
            <summary>
            Notes on the update (if applicable)
            </summary>
        </member>
        <member name="T:X360.XAbout">
            <summary>
            Object to hold information about this library
            </summary>
        </member>
        <member name="F:X360.XAbout.Development">
            <summary></summary>
        </member>
        <member name="F:X360.XAbout.Legal">
            <summary></summary>
        </member>
        <member name="F:X360.XAbout.Programmer">
            <summary></summary>
        </member>
        <member name="F:X360.XAbout.GNUProtected">
            <summary></summary>
        </member>
        <member name="F:X360.XAbout.Homepage">
            <summary></summary>
        </member>
        <member name="F:X360.XAbout.Donate">
            <summary></summary>
        </member>
        <member name="F:X360.XAbout.ReportBugs">
            <summary></summary>
        </member>
        <member name="M:X360.XAbout.CheckForUpdate">
            <summary>
            Checks if an update is needed
            </summary>
            <returns></returns>
        </member>
        <member name="M:X360.XAbout.WriteLegalLocally">
            <summary>
            Writes the legal documentation to a local location
            </summary>
        </member>
        <member name="P:X360.XAbout.Build">
            <summary></summary>
        </member>
        <member name="T:X360.Properties.Resources">
            <summary>
              A strongly-typed resource class, for looking up localized strings, etc.
            </summary>
        </member>
        <member name="P:X360.Properties.Resources.ResourceManager">
            <summary>
              Returns the cached ResourceManager instance used by this class.
            </summary>
        </member>
        <member name="P:X360.Properties.Resources.Culture">
            <summary>
              Overrides the current thread's CurrentUICulture property for all
              resource lookups using this strongly typed resource class.
            </summary>
        </member>
        <member name="P:X360.Properties.Resources.GPL30">
             <summary>
               Looks up a localized string similar to                     GNU GENERAL PUBLIC LICENSE
                                   Version 3, 29 June 2007
            
             Copyright (C) 2007 Free Software Foundation, Inc. &lt;http://fsf.org/&gt;
             Everyone is permitted to copy and distribute verbatim copies
             of this license document, but changing it is not allowed.
            
                                        Preamble
            
              The GNU General Public License is a free, copyleft license for
            software and other kinds of works.
            
              The licenses for most software and other practical works are designed
            to [rest of string was truncated]&quot;;.
             </summary>
        </member>
        <member name="T:X360.FATX.DriveTypes">
            <summary>
            Types of Xbox devices
            </summary>
        </member>
        <member name="F:X360.FATX.DriveTypes.Unknown">
            <summary>
            Unknown
            </summary>
        </member>
        <member name="F:X360.FATX.DriveTypes.HardDrive">
            <summary>
            Stock Hard Drive
            </summary>
        </member>
        <member name="F:X360.FATX.DriveTypes.MemoryUnit">
            <summary>
            Xbox Memory Unit
            </summary>
        </member>
        <member name="F:X360.FATX.DriveTypes.DevHardDrive">
            <summary>
            Developer Kit Hard Drive
            </summary>
        </member>
        <member name="F:X360.FATX.DriveTypes.USBFlashDrive">
            <summary>
            Formatted Flash Drive for the Xbox
            </summary>
        </member>
        <member name="T:X360.FATX.MU">
            <summary>
            Xbox Memory Card values
            </summary>
        </member>
        <member name="F:X360.FATX.MU.Partition1">
            <summary>Cache</summary>
        </member>
        <member name="F:X360.FATX.MU.Partition2">
            <summary>Content</summary>
        </member>
        <member name="T:X360.FATX.USB">
            <summary>
            USB Flash Drive offsets
            </summary>
        </member>
        <member name="F:X360.FATX.USB.Partition1">
            <summary>Cache</summary>
        </member>
        <member name="F:X360.FATX.USB.Partition2">
            <summary>Content</summary>
        </member>
        <member name="T:X360.FATX.HDD">
            <summary>
            Hard Drive Values
            </summary>
        </member>
        <member name="F:X360.FATX.HDD.SecuritySector">
            <summary>
            Security Sector
            </summary>
        </member>
        <member name="F:X360.FATX.HDD.Partition1">
            <summary>
            Partition 1
            </summary>
        </member>
        <member name="F:X360.FATX.HDD.Partition2">
            <summary>
            Partition 2
            </summary>
        </member>
        <member name="F:X360.FATX.HDD.Partition3">
            <summary>
            Partition 3
            </summary>
        </member>
        <member name="F:X360.FATX.HDD.Partition4">
            <summary>
            Partition 4
            </summary>
        </member>
        <member name="F:X360.FATX.HDD.Partition5">
            <summary>
            Partition 5
            </summary>
        </member>
        <member name="T:X360.FATX.FATXExcepts">
            <summary>
            Exceptions for FATX
            </summary>
        </member>
        <member name="P:X360.FATX.FATXExcepts.PartitionExcept">
            <summary>
            General error
            </summary>
        </member>
        <member name="P:X360.FATX.FATXExcepts.DriveExcept">
            <summary>
            Not a FATX drive
            </summary>
        </member>
        <member name="P:X360.FATX.FATXExcepts.SizeExcept">
            <summary>
            Invalid size
            </summary>
        </member>
        <member name="P:X360.FATX.FATXExcepts.ValidExcept">
            <summary>
            Not a valid instance
            </summary>
        </member>
        <member name="P:X360.FATX.FATXExcepts.TypeConflict">
            <summary>
            Not a folder
            </summary>
        </member>
        <member name="P:X360.FATX.FATXExcepts.FolderContents">
            <summary>
            Folder has contents
            </summary>
        </member>
        <member name="T:X360.FATX.DeviceReturn">
            <summary>
            Object to hold a device
            </summary>
        </member>
        <member name="P:X360.FATX.DeviceReturn.Type">
            <summary>
            Returns the Type of the device
            </summary>
        </member>
        <member name="P:X360.FATX.DeviceReturn.Index">
            <summary>
            Device index
            </summary>
        </member>
        <member name="P:X360.FATX.DeviceReturn.Name">
            <summary>
            Device Name
            </summary>
        </member>
        <member name="T:X360.FATX.FATXManagement">
            <summary>
            Tools for FATX drives
            </summary>
        </member>
        <member name="M:X360.FATX.FATXManagement.GetDrives(System.Byte)">
            <summary>
            Gets a set of Indexes for available drives
            </summary>
            <param name="PassCount"></param>
            <returns></returns>
        </member>
        <member name="M:X360.FATX.FATXManagement.IsFATX(X360.IO.Drive@,X360.FATX.DriveTypes@)">
            <summary>
            Is a FATX drive
            </summary>
            <param name="xDrive"></param>
            <param name="xType"></param>
            <returns></returns>
        </member>
        <member name="M:X360.FATX.FATXManagement.IsFATX(X360.IO.DJsIO@,X360.FATX.DriveTypes@)">
            <summary>
            Determins if a Drive is FATX format
            </summary>
            <param name="xIO">Stream to check</param>
            <param name="xType">Grabs the type of drive</param>
            <returns></returns>
        </member>
        <member name="M:X360.FATX.FATXManagement.IsFATX(X360.FATX.DeviceReturn,X360.FATX.DriveTypes@)">
            <summary>
            Determins if this Index is a FATX drive pointed index
            </summary>
            <param name="Device">Device to check</param>
            <param name="xType">Grabs the FATX type</param>
            <returns></returns>
        </member>
        <member name="M:X360.FATX.FATXManagement.GetFATXDrives(X360.FATX.DeviceReturn[])">
            <summary>
            Gets a result of available set of FATX Drives from a set of Indexes
            </summary>
            <param name="Drives">General drive list</param>
            <returns></returns>
        </member>
        <member name="M:X360.FATX.FATXManagement.GetFATXDrives(System.Byte)">
            <summary>
            Gets a set of available FATX Drive indexes from a set pass
            </summary>
            <param name="PassCount"></param>
            <returns></returns>
        </member>
        <member name="T:X360.FATX.FATXDrive">
            <summary>
            FATX Drive Class
            </summary>
        </member>
        <member name="M:X360.FATX.FATXDrive.ReadToFolder(System.String,X360.FATX.FATXFolderEntry@)">
            <summary>
            Attempts to read to a specified location
            </summary>
            <param name="Path">Path to read to</param>
            <param name="xFolderOut">FATXFolder of result</param>
            <returns></returns>
        </member>
        <member name="M:X360.FATX.FATXDrive.Close">
            <summary>
            Closes the stream
            </summary>
        </member>
        <member name="M:X360.FATX.FATXDrive.#ctor(X360.IO.Drive@)">
            <summary>
            Initializes a new FATX Drive Class from an already set Drive
            </summary>
            <param name="InDrive"></param>
        </member>
        <member name="M:X360.FATX.FATXDrive.#ctor(X360.FATX.DeviceReturn)">
            <summary>
            Sets a FATX Drive from an index
            </summary>
            <param name="DeviceIn"></param>
        </member>
        <member name="M:X360.FATX.FATXDrive.#ctor(System.String)">
            <summary>
            Load FATX from an Image
            </summary>
            <param name="FileLocale"></param>
        </member>
        <member name="M:X360.FATX.FATXDrive.#ctor(X360.IO.DJsIO)">
            <summary>
            Read a FATX Image
            </summary>
            <param name="xImage"></param>
        </member>
        <member name="M:X360.FATX.FATXDrive.ExtractImage(System.String)">
            <summary>
            Extracts the image via a file location
            </summary>
            <param name="fileOut"></param>
            <returns></returns>
        </member>
        <member name="M:X360.FATX.FATXDrive.ExtractImage(X360.IO.DJsIO)">
            <summary>
            Extract a binary image of your FATX Drive
            </summary>
            <param name="xIOOut"></param>
            <returns></returns>
        </member>
        <member name="M:X360.FATX.FATXDrive.RestoreImage(X360.FATX.FATXDrive)">
            <summary>
            Overwrite a binary image of your FATX Drive
            </summary>
            <param name="xImageDrive"></param>
            <returns></returns>
        </member>
        <member name="M:X360.FATX.FATXDrive.RestoreImage(System.String)">
            <summary>
            Restores image via file location
            </summary>
            <param name="ImageLocation"></param>
            <returns></returns>
        </member>
        <member name="M:X360.FATX.FATXDrive.ReloadDrive">
            <summary>
            Reloads the Partitions
            </summary>
            <returns></returns>
        </member>
        <member name="M:X360.FATX.FATXDrive.Finalize">
            <summary>
            Disposer
            </summary>
        </member>
        <member name="P:X360.FATX.FATXDrive.Type">
            <summary>
            Memory Card or Hard Drive
            </summary>
        </member>
        <member name="P:X360.FATX.FATXDrive.IsDriveIO">
            <summary>
            Is an IO to a device
            </summary>
        </member>
        <member name="P:X360.FATX.FATXDrive.Partitions">
            <summary>
            Determines if this Drive is successfully obtained
            </summary>
        </member>
        <member name="P:X360.FATX.FATXDrive.Success">
            <summary>
            True if parse success
            </summary>
        </member>
        <member name="P:X360.FATX.FATXDrive.SectorSize">
            <summary>
            Size of device sector
            </summary>
        </member>
        <member name="P:X360.FATX.FATXDrive.DriveSize">
            <summary>
            Size of device
            </summary>
        </member>
        <member name="P:X360.FATX.FATXDrive.DriveSizeFriendly">
            <summary>
            Friendly size
            </summary>
        </member>
        <member name="P:X360.FATX.FATXDrive.DriveName">
            <summary>
            Name of the device
            </summary>
        </member>
        <member name="T:X360.Other.LogRecord">
            <summary>
            X360 Log
            </summary>
        </member>
        <member name="M:X360.Other.LogRecord.#ctor">
            <summary>
            Initializes a log
            </summary>
        </member>
        <member name="P:X360.Other.LogRecord.Log">
            <summary>
            Recorded log
            </summary>
        </member>
        <member name="E:X360.Other.LogRecord.WhenLogged">
            <summary>
            On the event of a log
            </summary>
        </member>
        <member name="T:X360.Other.LogRecord.OnLog">
            <summary>
            Executed when a log is performed
            </summary>
            <param name="xLog"></param>
        </member>
        <member name="T:X360.Other.VariousExcepts">
            <summary>
            Various Function Exceptions
            </summary>
        </member>
        <member name="P:X360.Other.VariousExcepts.ByteInput">
            <summary>
            Invalid byte input exception
            </summary>
        </member>
        <member name="T:X360.Other.XboxFileType">
            <summary>
            Xbox File Types
            </summary>
        </member>
        <member name="F:X360.Other.XboxFileType.None">
            <summary>
            None
            </summary>
        </member>
        <member name="F:X360.Other.XboxFileType.STFS">
            <summary>
            Secure Transacted File System
            </summary>
        </member>
        <member name="F:X360.Other.XboxFileType.SVOD">
            <summary>
            SVOD (Unknown Name)
            </summary>
        </member>
        <member name="F:X360.Other.XboxFileType.GPD">
            <summary>
            Game Progress Data
            </summary>
        </member>
        <member name="F:X360.Other.XboxFileType.GDF">
            <summary>
            Game Disc File system
            </summary>
        </member>
        <member name="F:X360.Other.XboxFileType.Music">
            <summary>
            Music file
            </summary>
        </member>
        <member name="F:X360.Other.XboxFileType.FATX">
            <summary>
            File Allocation Tables for the Xbox
            </summary>
        </member>
        <member name="T:X360.Other.AssemblyFunctions">
            <summary>
            General assembly functions
            </summary>
        </member>
        <member name="M:X360.Other.AssemblyFunctions.GrabParentProcessName">
            <summary>
            Grabs the name of the process that called to this library
            </summary>
            <returns></returns>
        </member>
        <member name="M:X360.Other.AssemblyFunctions.GrabCallerVersion">
            <summary>
            Grabs the version of the executing code that called to this library
            </summary>
            <returns></returns>
        </member>
        <member name="T:X360.Other.VariousFunctions">
            <summary>
            Various programming functions
            </summary>
        </member>
        <member name="M:X360.Other.VariousFunctions.IDToConsoleID(System.Int64)">
            <summary>
            Returns your Console ID from the System Console ID located on your console (System Info tab)
            </summary>
            <param name="ID"></param>
            <returns></returns>
        </member>
        <member name="M:X360.Other.VariousFunctions.ConsoleIDToID(System.Int64)">
            <summary>
            Returns your System Console ID from the Console ID (Make sure to convert to Hex)
            </summary>
            <param name="ConsoleID"></param>
            <returns></returns>
        </member>
        <member name="M:X360.Other.VariousFunctions.GetFilter(System.String)">
            <summary>
            Gets a File Filter from just a file name
            </summary>
            <param name="File"></param>
            <returns></returns>
        </member>
        <member name="M:X360.Other.VariousFunctions.DeleteTempFiles">
            <summary>
            Deletes all unused X360 temporary files
            </summary>
            <returns></returns>
        </member>
        <member name="M:X360.Other.VariousFunctions.GetTempFileLocale">
            <summary>
            Generates a reserved temporary file location
            </summary>
            <returns></returns>
        </member>
        <member name="M:X360.Other.VariousFunctions.DeleteFile(System.String)">
            <summary>
            Attempts to delete a file
            </summary>
            <param name="xLongFileName"></param>
            <returns></returns>
        </member>
        <member name="M:X360.Other.VariousFunctions.HexToBytes(System.String)">
            <summary>
            Converts a hexidecimal string to bytes, returns nothing if error
            </summary>
            <param name="xInput"></param>
            <returns></returns>
        </member>
        <member name="M:X360.Other.VariousFunctions.BinaryToLong(System.String)">
            <summary>
            Converts
            </summary>
            <param name="xInput"></param>
            <returns></returns>
        </member>
        <member name="M:X360.Other.VariousFunctions.BytesToHex(System.Byte[])">
            <summary>
            Converts a byte array to a hexidecimal string
            </summary>
            <param name="xInput"></param>
            <returns></returns>
        </member>
        <member name="M:X360.Other.VariousFunctions.BytePiece(System.Byte[],System.Int32,System.Int32)">
            <summary>
            Gets a piece of an array from a specified position and size
            </summary>
            <param name="xInput"></param>
            <param name="xOffset"></param>
            <param name="xSize"></param>
            <returns></returns>
        </member>
        <member name="M:X360.Other.VariousFunctions.EndianConvert(System.Byte[])">
            <summary>
            Converts the "endianess" of a byte array
            </summary>
            <param name="xInput"></param>
            <returns></returns>
        </member>
        <member name="M:X360.Other.VariousFunctions.ByteArrayCombine(System.Byte[]@,System.Byte[])">
            <summary>
            Adds a byte to the specified array
            </summary>
            <param name="xArray"></param>
            <param name="xAdd"></param>
            <returns></returns>
        </member>
        <member name="M:X360.Other.VariousFunctions.MoveFile(System.String,System.String)">
            <summary>
            Moves a file
            </summary>
            <param name="Source"></param>
            <param name="Dest"></param>
            <returns></returns>
        </member>
        <member name="M:X360.Other.VariousFunctions.IsValidXboxName(System.String)">
            <summary>
            Checks if the name is a valid Xbox Name
            </summary>
            <param name="x">String value</param>
            <returns>True if valid</returns>
        </member>
        <member name="M:X360.Other.VariousFunctions.GetUserFileLocale(System.String,System.String,System.Boolean)">
            <summary>
            Grabs a location from the end user
            </summary>
            <param name="Title">Dialog Title</param>
            <param name="Filter">Dialog Filter</param>
            <param name="IsOpen">True for Open File Dialog, false for Save File Dialog</param>
            <returns></returns>
        </member>
        <member name="M:X360.Other.VariousFunctions.GetUserFileLocale(System.String,System.String,System.String,System.Boolean)">
            <summary>
            Grabs a user selected file
            </summary>
            <param name="Title"></param>
            <param name="Filter"></param>
            <param name="StartingFileName"></param>
            <param name="IsOpen"></param>
            <returns></returns>
        </member>
        <member name="M:X360.Other.VariousFunctions.GetUserFolderLocale(System.String)">
            <summary>
            Grabs a user selected folder path
            </summary>
            <param name="Description"></param>
            <returns></returns>
        </member>
        <member name="M:X360.Other.VariousFunctions.GetUserFolderLocale(System.String,System.String)">
            <summary>
            Grabs a user selected folder path with a starting folder point
            </summary>
            <param name="Description"></param>
            <param name="StartPath"></param>
            <returns></returns>
        </member>
        <member name="M:X360.Other.VariousFunctions.ReadFileType(System.String)">
            <summary>
            Attempts to find the type of the file
            </summary>
            <param name="FileLocale"></param>
            <returns></returns>
        </member>
        <member name="M:X360.Other.VariousFunctions.GetWebPageResponse(System.String)">
            <summary>
            Grabs the response of a webpage
            </summary>
            <param name="URL"></param>
            <returns></returns>
        </member>
        <member name="M:X360.Other.VariousFunctions.GetFriendlySize(System.Int64)">
            <summary>
            Returns a string on the friendly size of a file or disk
            </summary>
            <param name="xSize"></param>
            <returns></returns>
        </member>
        <member name="T:X360.Other.TimeStamps">
            <summary>
            General Time Stamps used
            </summary>
        </member>
        <member name="M:X360.Other.TimeStamps.LongToDateTime(System.Int64)">
            <summary>
            Converts an Int64 FileTime to a DateTime
            </summary>
            <param name="xInput"></param>
            <returns></returns>
        </member>
        <member name="M:X360.Other.TimeStamps.DateTimeToLong(System.DateTime)">
            <summary>
            Converts a DateTime to an Int64 FileTime
            </summary>
            <param name="xInput"></param>
            <returns></returns>
        </member>
        <member name="M:X360.Other.TimeStamps.FatTimeDT(System.Int32)">
            <summary>
            Converts an Int32 FatTime to a DateTime
            </summary>
            <param name="xDateTime"></param>
            <returns></returns>
        </member>
        <member name="M:X360.Other.TimeStamps.FatTimeInt(System.DateTime)">
            <summary>
            Converts a DateTime to an Int32 FatTime
            </summary>
            <param name="xDateTime"></param>
            <returns></returns>
        </member>
        <member name="P:X360.Other.TimeStamps.DateTimeZero">
            <summary>
            Returns an all 0 DateTime
            </summary>
            <returns></returns>
        </member>
        <member name="T:X360.Other.Imaging">
            <summary>
            Conversion of bytes for imaging
            </summary>
        </member>
        <member name="M:X360.Other.Imaging.BytesToImage(System.Byte[])">
            <summary>
            Attempts to convert a byte array to an Image
            </summary>
            <param name="xBytes"></param>
            <returns></returns>
        </member>
        <member name="M:X360.Other.Imaging.ImageToBytes(System.Drawing.Image,System.Drawing.Imaging.ImageFormat)">
            <summary>
            Converts an Image to a byte array
            </summary>
            <param name="xImage"></param>
            <param name="xFormat"></param>
            <returns></returns>
        </member>
        <member name="T:X360.Other.AllMagic">
            <summary>
            All headers for Xbox 360 Packages
            </summary>
        </member>
        <member name="F:X360.Other.AllMagic.Music">
            <summary>
            Music files
            </summary>
        </member>
        <member name="F:X360.Other.AllMagic.CON">
            <summary>
            Console signed STFS
            </summary>
        </member>
        <member name="F:X360.Other.AllMagic.LIVE">
            <summary>
            Xbox Live Server signed STFS
            </summary>
        </member>
        <member name="F:X360.Other.AllMagic.PIRS">
            <summary>
            Xbox Development signed STFS
            </summary>
        </member>
        <member name="F:X360.Other.AllMagic.XDBF">
            <summary>
            Xbox Data Base File
            </summary>
        </member>
        <member name="F:X360.Other.AllMagic.FATX">
            <summary>
            Xbox FAT magic
            </summary>
        </member>
        <member name="F:X360.Other.AllMagic.XSF">
            <summary>
            
            </summary>
        </member>
        <member name="F:X360.Other.AllMagic.XEX2">
            <summary>
            Xbox executable magic
            </summary>
        </member>
        <member name="T:X360.Profile.AccountType">
            <summary>
            Account type
            </summary>
        </member>
        <member name="F:X360.Profile.AccountType.Stock">
            <summary>
            Stock account
            </summary>
        </member>
        <member name="F:X360.Profile.AccountType.Kits">
            <summary>
            Dev/Demo/Etc Account
            </summary>
        </member>
        <member name="T:X360.Profile.PassCode">
            <summary>
            Pass code values
            </summary>
        </member>
        <member name="F:X360.Profile.PassCode.Null">
            <summary></summary>
        </member>
        <member name="F:X360.Profile.PassCode.UpDPad">
            <summary></summary>
        </member>
        <member name="F:X360.Profile.PassCode.DownDPad">
            <summary></summary>
        </member>
        <member name="F:X360.Profile.PassCode.LeftDPad">
            <summary></summary>
        </member>
        <member name="F:X360.Profile.PassCode.RightDPad">
            <summary></summary>
        </member>
        <member name="F:X360.Profile.PassCode.X">
            <summary></summary>
        </member>
        <member name="F:X360.Profile.PassCode.Y">
            <summary></summary>
        </member>
        <member name="F:X360.Profile.PassCode.LTrigger">
            <summary></summary>
        </member>
        <member name="F:X360.Profile.PassCode.RTrigger">
            <summary></summary>
        </member>
        <member name="F:X360.Profile.PassCode.LBumper">
            <summary></summary>
        </member>
        <member name="F:X360.Profile.PassCode.RBumper">
            <summary></summary>
        </member>
        <member name="T:X360.Profile.Membership">
            <summary>
            Account memberships
            </summary>
        </member>
        <member name="F:X360.Profile.Membership.None">
            <summary></summary>
        </member>
        <member name="F:X360.Profile.Membership.Silver">
            <summary></summary>
        </member>
        <member name="F:X360.Profile.Membership.Gold">
            <summary></summary>
        </member>
        <member name="T:X360.Profile.UserAccount">
            <summary>
            Object to hold a user Account
            </summary>
        </member>
        <member name="M:X360.Profile.UserAccount.#ctor(X360.IO.DJsIO,X360.Profile.AccountType,System.Boolean)">
            <summary>
            Initializes an instance
            </summary>
            <param name="xAcc"></param>
            <param name="xType"></param>
            <param name="CreateBackup"></param>
        </member>
        <member name="M:X360.Profile.UserAccount.GetDecryptedData">
            <summary>
            Grab the decrypted data
            </summary>
            <returns></returns>
        </member>
        <member name="M:X360.Profile.UserAccount.RestoreBackup">
            <summary>
            Restore back up info
            </summary>
            <returns></returns>
        </member>
        <member name="M:X360.Profile.UserAccount.GetGamertag">
            <summary>
            Grabs the account gamertag
            </summary>
            <returns></returns>
        </member>
        <member name="M:X360.Profile.UserAccount.SaveGamertag(System.String)">
            <summary>
            Saves the gamertag
            </summary>
            <param name="xNewTag"></param>
            <returns></returns>
        </member>
        <member name="M:X360.Profile.UserAccount.GetPassCode">
            <summary>
            Grabs the pass code
            </summary>
            <returns></returns>
        </member>
        <member name="M:X360.Profile.UserAccount.SetPassCode(X360.Profile.PassCode[])">
            <summary>
            Sets the pass code
            </summary>
            <param name="xPass"></param>
            <returns></returns>
        </member>
        <member name="M:X360.Profile.UserAccount.GetMembership">
            <summary>
            Grabs the membership
            </summary>
            <returns></returns>
        </member>
        <member name="M:X360.Profile.UserAccount.SaveMembership(X360.Profile.Membership)">
            <summary>
            Save membership type
            </summary>
            <param name="xMemberType"></param>
            <returns></returns>
        </member>
        <member name="M:X360.Profile.UserAccount.ForceIntoHDDAccount">
            <summary>
            Force into a HDD account
            </summary>
            <returns></returns>
        </member>
        <member name="P:X360.Profile.UserAccount.XUID">
            <summary>
            Account XUID
            </summary>
        </member>
        <member name="P:X360.Profile.UserAccount.IsLiveEnabled">
            <summary>
            Can go on Xbox Live
            </summary>
        </member>
        <member name="P:X360.Profile.UserAccount.Success">
            <summary>
            Parse success
            </summary>
        </member>
        <member name="P:X360.Profile.UserAccount.ThisType">
            <summary>
            Gets/Sets account type
            </summary>
        </member>
        <member name="T:X360.Profile.ProfileTools">
            <summary>
            Object to hold extra profile functions
            </summary>
        </member>
        <member name="M:X360.Profile.ProfileTools.GPDNameToID(System.String)">
            <summary>
            Takes a filename and attempts to extract an ID from it
            </summary>
            <param name="GPDName"></param>
            <returns></returns>
        </member>
        <member name="T:X360.Profile.GPDExcepts">
            <summary>
            Object to hold GPD errors
            </summary>
        </member>
        <member name="P:X360.Profile.GPDExcepts.HasID">
            <summary>
            Has ID
            </summary>
        </member>
        <member name="P:X360.Profile.GPDExcepts.IsntXDBF">
            <summary>
            Not XDBF
            </summary>
        </member>
        <member name="P:X360.Profile.GPDExcepts.NameError">
            <summary>
            Name Error
            </summary>
        </member>
        <member name="P:X360.Profile.GPDExcepts.InUse">
            <summary>
            Cannot multitask
            </summary>
        </member>
        <member name="T:X360.Profile.GPDIDs">
            <summary> ID's found in GPDs </summary>
        </member>
        <member name="F:X360.Profile.GPDIDs.ThisTitle">
            <summary>Data pertaining to the Title</summary>
        </member>
        <member name="F:X360.Profile.GPDIDs.UserPermissions">
            <summary>Account permissions</summary>
        </member>
        <member name="F:X360.Profile.GPDIDs.UserGamerType">
            <summary>Gamer Type</summary>
        </member>
        <member name="F:X360.Profile.GPDIDs.UserYAxisInversion">
            <summary>Y Axis inversion setting</summary>
        </member>
        <member name="F:X360.Profile.GPDIDs.UserControllerVibration">
            <summary>Controller Vibration setting</summary>
        </member>
        <member name="F:X360.Profile.GPDIDs.AvatarInformation">
            <summary>Avatar information setting</summary>
        </member>
        <member name="F:X360.Profile.GPDIDs.TitleSpecific1">
            <summary>Title reserved data 1</summary>
        </member>
        <member name="F:X360.Profile.GPDIDs.TitleSpecific2">
            <summary>Title reserved data 2</summary>
        </member>
        <member name="F:X360.Profile.GPDIDs.TitleSpecific3">
            <summary>Title reserved data 3</summary>
        </member>
        <member name="F:X360.Profile.GPDIDs.GCardZone">
            <summary>Account Gamerzon</summary>
        </member>
        <member name="F:X360.Profile.GPDIDs.GCardRegion">
            <summary>Account Region</summary>
        </member>
        <member name="F:X360.Profile.GPDIDs.GCardCredit">
            <summary>Account Gamerscore</summary>
        </member>
        <member name="F:X360.Profile.GPDIDs.UserPresenceState">
            <summary>Unknown</summary>
        </member>
        <member name="F:X360.Profile.GPDIDs.GCardHasVision">
            <summary>Has vision camera?</summary>
        </member>
        <member name="F:X360.Profile.GPDIDs.GCardRep">
            <summary>Account reputation</summary>
        </member>
        <member name="F:X360.Profile.GPDIDs.UserVoiceMuted">
            <summary>Account mute setting</summary>
        </member>
        <member name="F:X360.Profile.GPDIDs.UserVoiceThruSpeakers">
            <summary>Account voice through speaker setting</summary>
        </member>
        <member name="F:X360.Profile.GPDIDs.UserVoiceVolume">
            <summary>Account voice volume setting</summary>
        </member>
        <member name="F:X360.Profile.GPDIDs.GCardPictureKey">
            <summary>Account gamerpicture reference</summary>
        </member>
        <member name="F:X360.Profile.GPDIDs.GCardPersonalPicture">
            <summary>Account personal picture reference</summary>
        </member>
        <member name="F:X360.Profile.GPDIDs.GCardMotto">
            <summary>Account motto</summary>
        </member>
        <member name="F:X360.Profile.GPDIDs.GCardTitlesPlayed">
            <summary>Account titles played count</summary>
        </member>
        <member name="F:X360.Profile.GPDIDs.GCardAchievementsEarned">
            <summary>Account achievements earned count</summary>
        </member>
        <member name="F:X360.Profile.GPDIDs.GCardDifficulty">
            <summary>Account default difficulty setting</summary>
        </member>
        <member name="F:X360.Profile.GPDIDs.UserControlSensitivity">
            <summary>Account sensitivity setting</summary>
        </member>
        <member name="F:X360.Profile.GPDIDs.UserPreferredColor1">
            <summary>Account preferred color 1</summary>
        </member>
        <member name="F:X360.Profile.GPDIDs.UserPreferredColor2">
            <summary>Account preferred color 2</summary>
        </member>
        <member name="F:X360.Profile.GPDIDs.UserAutoAim">
            <summary>Account auto aim</summary>
        </member>
        <member name="F:X360.Profile.GPDIDs.UserAutoCenter">
            <summary>Account auto center setting</summary>
        </member>
        <member name="F:X360.Profile.GPDIDs.UserActionMovementControl">
            <summary>Account movement setting</summary>
        </member>
        <member name="F:X360.Profile.GPDIDs.UserRaceTransmission">
            <summary>Account default transmission setting</summary>
        </member>
        <member name="F:X360.Profile.GPDIDs.UserRaceCamPosition">
            <summary>Account racecam position setting</summary>
        </member>
        <member name="F:X360.Profile.GPDIDs.UserRaceBrakeControl">
            <summary>Account race breaking setting</summary>
        </member>
        <member name="F:X360.Profile.GPDIDs.UserRaceAccelControl">
            <summary>Account accelarating setting</summary>
        </member>
        <member name="F:X360.Profile.GPDIDs.GCardTitleCreditEarned">
            <summary>Gamerscore earned on a title</summary>
        </member>
        <member name="F:X360.Profile.GPDIDs.GCardTitleAchievementsEarned">
            <summary>Achievement count of a title</summary>
        </member>
        <member name="F:X360.Profile.GPDIDs.UserTier">
            <summary>Unknown</summary>
        </member>
        <member name="F:X360.Profile.GPDIDs.UserMessangerSignUpState">
            <summary>Unknown</summary>
        </member>
        <member name="F:X360.Profile.GPDIDs.UserMessangerAutoSignIn">
            <summary>Account auto sign in</summary>
        </member>
        <member name="F:X360.Profile.GPDIDs.UserSaveLIVEPassword">
            <summary>Save password</summary>
        </member>
        <member name="F:X360.Profile.GPDIDs.UserShowFriends">
            <summary>Show friends to others?</summary>
        </member>
        <member name="F:X360.Profile.GPDIDs.GCardServiceType">
            <summary>Unknown</summary>
        </member>
        <member name="F:X360.Profile.GPDIDs.GCardName">
            <summary>Account name input</summary>
        </member>
        <member name="F:X360.Profile.GPDIDs.GCardUserLocale">
            <summary>Account location input</summary>
        </member>
        <member name="F:X360.Profile.GPDIDs.GCardUserURL">
            <summary>Unknown</summary>
        </member>
        <member name="F:X360.Profile.GPDIDs.GCardUserBio">
            <summary>Account Bio</summary>
        </member>
        <member name="F:X360.Profile.GPDIDs.WebEmailFormat">
            <summary>Xbox.com setting</summary>
        </member>
        <member name="F:X360.Profile.GPDIDs.WebFlags">
            <summary>Xbox.com setting</summary>
        </member>
        <member name="F:X360.Profile.GPDIDs.WebSpam">
            <summary>Unknown</summary>
        </member>
        <member name="F:X360.Profile.GPDIDs.WebFavGenre">
            <summary>Xbox.com setting</summary>
        </member>
        <member name="F:X360.Profile.GPDIDs.WebFavGame">
            <summary>Xbox.com setting</summary>
        </member>
        <member name="F:X360.Profile.GPDIDs.WebFavGame1">
            <summary>Xbox.com setting</summary>
        </member>
        <member name="F:X360.Profile.GPDIDs.WebFavGame2">
            <summary>Xbox.com setting</summary>
        </member>
        <member name="F:X360.Profile.GPDIDs.WebFavGame3">
            <summary>Xbox.com setting</summary>
        </member>
        <member name="F:X360.Profile.GPDIDs.WebFavGame4">
            <summary>Xbox.com setting</summary>
        </member>
        <member name="F:X360.Profile.GPDIDs.WebFavGame5">
            <summary>Xbox.com setting</summary>
        </member>
        <member name="F:X360.Profile.GPDIDs.WebPlatformsOwned">
            <summary>Xbox.com setting</summary>
        </member>
        <member name="F:X360.Profile.GPDIDs.WebConnectionSpeed">
            <summary>Xbox.com setting</summary>
        </member>
        <member name="F:X360.Profile.GPDIDs.WebFlash">
            <summary>Unknown</summary>
        </member>
        <member name="F:X360.Profile.GPDIDs.WebVideoPref">
            <summary>Unknown</summary>
        </member>
        <member name="F:X360.Profile.GPDIDs.UserCruxMediaPic">
            <summary>Unknown</summary>
        </member>
        <member name="F:X360.Profile.GPDIDs.UserCruxMediaStyle1">
            <summary>Unknown</summary>
        </member>
        <member name="F:X360.Profile.GPDIDs.UserCruxMediaStyle2">
            <summary>Unknown</summary>
        </member>
        <member name="F:X360.Profile.GPDIDs.UserCruxMediaStyle3">
            <summary>Unknown</summary>
        </member>
        <member name="F:X360.Profile.GPDIDs.UserCruxTopAlbum1">
            <summary>Unknown</summary>
        </member>
        <member name="F:X360.Profile.GPDIDs.UserCruxTopAlbum2">
            <summary>Unknown</summary>
        </member>
        <member name="F:X360.Profile.GPDIDs.UserCruxTopAlbum3">
            <summary>Unknown</summary>
        </member>
        <member name="F:X360.Profile.GPDIDs.UserCruxTopAlbum4">
            <summary>Unknown</summary>
        </member>
        <member name="F:X360.Profile.GPDIDs.UserCruxTopAlbum5">
            <summary>Unknown</summary>
        </member>
        <member name="F:X360.Profile.GPDIDs.UserCruxOfflineID">
            <summary>Unknown</summary>
        </member>
        <member name="F:X360.Profile.GPDIDs.UserCruxBKGDImage">
            <summary>Unknown</summary>
        </member>
        <member name="F:X360.Profile.GPDIDs.UserCruxLastChangeTime">
            <summary>Unknown</summary>
        </member>
        <member name="F:X360.Profile.GPDIDs.UserCruxTopMusic">
            <summary>Unknown</summary>
        </member>
        <member name="F:X360.Profile.GPDIDs.UserCruxMotto">
            <summary>Unknown</summary>
        </member>
        <member name="F:X360.Profile.GPDIDs.UserCruxTopMediaID1">
            <summary>Unknown</summary>
        </member>
        <member name="F:X360.Profile.GPDIDs.UserCruxTopMediaID2">
            <summary>Unknown</summary>
        </member>
        <member name="F:X360.Profile.GPDIDs.UserCruxTopMediaID3">
            <summary>Unknown</summary>
        </member>
        <member name="F:X360.Profile.GPDIDs.UserCruxBio">
            <summary>Unknown</summary>
        </member>
        <member name="F:X360.Profile.GPDIDs.UserCruxBGSmallPublic">
            <summary>Unknown</summary>
        </member>
        <member name="F:X360.Profile.GPDIDs.UserCruxBGLargePublic">
            <summary>Unknown</summary>
        </member>
        <member name="F:X360.Profile.GPDIDs.IndexRecord">
            <summary>GPD Sync ID table</summary>
        </member>
        <member name="F:X360.Profile.GPDIDs.SyncRecord">
            <summary>GPD Sync record</summary>
        </member>
        <member name="T:X360.Profile.SyncType">
            <summary>
            How to preform the XDBF item sync
            </summary>
        </member>
        <member name="F:X360.Profile.SyncType.None">
            <summary>No sync</summary>
        </member>
        <member name="F:X360.Profile.SyncType.Server">
            <summary>Sync to the server</summary>
        </member>
        <member name="F:X360.Profile.SyncType.Locale">
            <summary>Sync only locally</summary>
        </member>
        <member name="T:X360.Profile.NameSpace">
            <summary>XDBF item types</summary>
        </member>
        <member name="F:X360.Profile.NameSpace.Nothing">
            <summary>Bad item</summary>
        </member>
        <member name="F:X360.Profile.NameSpace.Achievement">
            <summary>Achievement entry</summary>
        </member>
        <member name="F:X360.Profile.NameSpace.Image">
            <summary>Image entry</summary>
        </member>
        <member name="F:X360.Profile.NameSpace.Setting">
            <summary>Setting entry</summary>
        </member>
        <member name="F:X360.Profile.NameSpace.Title">
            <summary>Title data entry</summary>
        </member>
        <member name="F:X360.Profile.NameSpace.String">
            <summary>Text data</summary>
        </member>
        <member name="T:X360.Profile.SyncPair">
            <summary>
            Object to hold Sync/Entry ID's
            </summary>
        </member>
        <member name="P:X360.Profile.SyncPair.ID">
            <summary>
            Entry ID
            </summary>
        </member>
        <member name="P:X360.Profile.SyncPair.Sync">
            <summary>
            Sync ID
            </summary>
        </member>
        <member name="T:X360.Profile.RecordEntry">
            <summary>
            Object to hold all sync pairs for namespace
            </summary>
        </member>
        <member name="P:X360.Profile.RecordEntry.SyncPairs">
            <summary>
            Sync pairs in record
            </summary>
        </member>
        <member name="T:X360.Profile.Setting">
            <summary>
            Object to hold a GPD entry
            </summary>
        </member>
        <member name="M:X360.Profile.Setting.Update(X360.Profile.SyncType)">
            <summary>
            Updates the data
            </summary>
            <param name="xType"></param>
            <returns></returns>
        </member>
        <member name="P:X360.Profile.Setting.Data">
            <summary>
            Data
            </summary>
        </member>
        <member name="P:X360.Profile.Setting.SettingID">
            <summary>
            Setting ID
            </summary>
        </member>
        <member name="P:X360.Profile.Setting.IDType">
            <summary>
            IDType
            </summary>
        </member>
        <member name="P:X360.Profile.Setting.ContentType">
            <summary>
            Content Type
            </summary>
        </member>
        <member name="T:X360.Profile.SyncEntry">
            <summary>
            Object to hold syncing data
            </summary>
        </member>
        <member name="P:X360.Profile.SyncEntry.ServerSync">
            <summary>
            Last sync time
            </summary>
        </member>
        <member name="P:X360.Profile.SyncEntry.Last">
            <summary>
            Last sync'ed entry
            </summary>
        </member>
        <member name="P:X360.Profile.SyncEntry.Next">
            <summary>
            Next assignable sync ID
            </summary>
        </member>
        <member name="T:X360.Profile.ImageEntry">
            <summary>
            Object to hold GPD images
            </summary>
        </member>
        <member name="P:X360.Profile.ImageEntry.ImageOutput">
            <summary>
            Image
            </summary>
        </member>
        <member name="T:X360.Profile.StringEntry">
            <summary>
            Object to hold GPD strings
            </summary>
        </member>
        <member name="F:X360.Profile.StringEntry.Data">
            <summary>
            Setting data
            </summary>
        </member>
        <member name="M:X360.Profile.StringEntry.Update">
            <summary>
            Update the data
            </summary>
            <returns></returns>
        </member>
        <member name="T:X360.Profile.OtherEntry">
            <summary>
            Object to hold unknown entries
            </summary>
        </member>
        <member name="M:X360.Profile.OtherEntry.Update">
            <summary>
            Update the data
            </summary>
            <returns></returns>
        </member>
        <member name="P:X360.Profile.OtherEntry.Data">
            <summary>
            Binary Data
            </summary>
        </member>
        <member name="T:X360.STFS.STFSDescriptor">
            <summary>
            Object to hold STFS information
            </summary>
        </member>
        <member name="M:X360.STFS.STFSDescriptor.GetData">
            <summary>
            Returns the STFS Descriptor
            </summary>
            <returns></returns>
        </member>
        <member name="P:X360.STFS.STFSDescriptor.BlockCount">
            <summary>
            Block size of package
            </summary>
        </member>
        <member name="P:X360.STFS.STFSDescriptor.DirectoryBlockCount">
            <summary>
            Directory Block Count
            </summary>
        </member>
        <member name="P:X360.STFS.STFSDescriptor.DirectoryBlock">
            <summary>
            Directory starting block
            </summary>
        </member>
        <member name="P:X360.STFS.STFSDescriptor.ThisType">
            <summary>
            STFS Type
            </summary>
        </member>
        <member name="P:X360.STFS.STFSDescriptor.OldBlockCount">
            <summary>
            Old block count
            </summary>
        </member>
        <member name="T:X360.FATX.FATXEntry">
            <summary>
            Generic entry for FATX
            </summary>
        </member>
        <member name="M:X360.FATX.FATXEntry.WriteEntry">
            <summary>
            Writes the entry data
            </summary>
            <returns></returns>
        </member>
        <member name="P:X360.FATX.FATXEntry.Size">
            <summary>
            Entry Size
            </summary>
        </member>
        <member name="P:X360.FATX.FATXEntry.StartBlock">
            <summary>
            Entry Start Block
            </summary>
        </member>
        <member name="P:X360.FATX.FATXEntry.IsFolder">
            <summary>
            Entry folder flag
            </summary>
        </member>
        <member name="P:X360.FATX.FATXEntry.Name">
            <summary>
            Entry name
            </summary>
        </member>
        <member name="P:X360.FATX.FATXEntry.Partition">
            <summary>
            is a FATX partition
            </summary>
        </member>
        <member name="T:X360.FATX.FATXFileEntry">
            <summary>
            Object to hold FATX File Entry
            </summary>
        </member>
        <member name="M:X360.FATX.FATXFileEntry.Inject(System.String)">
            <summary>
            Overwrite the file
            </summary>
            <param name="FileIn"></param>
            <returns></returns>
        </member>
        <member name="M:X360.FATX.FATXFileEntry.Replace(System.String)">
            <summary>
            Replace the file
            </summary>
            <param name="FileIn"></param>
            <returns></returns>
        </member>
        <member name="M:X360.FATX.FATXFileEntry.Delete">
            <summary>
            Delete the file
            </summary>
            <returns></returns>
        </member>
        <member name="M:X360.FATX.FATXFileEntry.Extract(System.String)">
            <summary>
            Extract the file
            </summary>
            <param name="OutLocation"></param>
            <returns></returns>
        </member>
        <member name="M:X360.FATX.FATXFileEntry.GetSTFSName">
            <summary>
            Grabs the STFS name of the package
            </summary>
            <returns></returns>
        </member>
        <member name="T:X360.FATX.FATXReadContents">
            <summary>
            Object to hold contents of a read folder
            </summary>
        </member>
        <member name="P:X360.FATX.FATXReadContents.Files">
            <summary>
            Files
            </summary>
        </member>
        <member name="P:X360.FATX.FATXReadContents.Folders">
            <summary>
            Folders
            </summary>
        </member>
        <member name="P:X360.FATX.FATXReadContents.SubPartitions">
            <summary>
            Subpartitions
            </summary>
        </member>
        <member name="T:X360.FATX.FATXFolderEntry">
            <summary>
            Object to hold FATX Folder
            </summary>
        </member>
        <member name="M:X360.FATX.FATXFolderEntry.Read">
            <summary>
            Reads the contents
            </summary>
            <returns></returns>
        </member>
        <member name="M:X360.FATX.FATXFolderEntry.GetNewEntryPos(System.UInt32@)">
            <summary>
            Gets a location for a new entry
            </summary>
            <param name="block"></param>
            <returns></returns>
        </member>
        <member name="M:X360.FATX.FATXFolderEntry.AddFolder(System.String)">
            <summary>
            Adds a folder
            </summary>
            <param name="FolderName"></param>
            <returns></returns>
        </member>
        <member name="M:X360.FATX.FATXFolderEntry.AddFile(System.String,System.String,X360.AddType)">
            <summary>
            Adds a file
            </summary>
            <param name="FileName"></param>
            <param name="FileLocation"></param>
            <param name="xType"></param>
            <returns></returns>
        </member>
        <member name="M:X360.FATX.FATXFolderEntry.Extract(System.String,System.Boolean)">
            <summary>
            Extracts a file
            </summary>
            <param name="xOutPath"></param>
            <param name="IncludeSubFolders"></param>
            <returns></returns>
        </member>
        <member name="T:X360.FATX.FATXPartition">
            <summary>
            Object to hold a FATX partition
            </summary>
        </member>
        <member name="P:X360.FATX.FATXPartition.Folders">
            <summary>
            Folders
            </summary>
        </member>
        <member name="P:X360.FATX.FATXPartition.Files">
            <summary>
            Files in the partition
            </summary>
        </member>
        <member name="P:X360.FATX.FATXPartition.SubPartitions">
            <summary>
            Subpartitions
            </summary>
        </member>
        <member name="P:X360.FATX.FATXPartition.IsValid">
            <summary>
            Valid instance
            </summary>
        </member>
        <member name="P:X360.FATX.FATXPartition.PartitionName">
            <summary>
            Partition name
            </summary>
        </member>
        <member name="T:X360.Profile.ActionMovementStick">
            <summary>
            Enums for stick movement
            </summary>
        </member>
        <member name="F:X360.Profile.ActionMovementStick.LeftStick">
            <summary></summary>
        </member>
        <member name="F:X360.Profile.ActionMovementStick.RightStick">
            <summary></summary>
        </member>
        <member name="T:X360.Profile.GeneralColor">
            <summary>
            Enums for color presets
            </summary>
        </member>
        <member name="F:X360.Profile.GeneralColor.None">
            <summary></summary>
        </member>
        <member name="F:X360.Profile.GeneralColor.Black">
            <summary></summary>
        </member>
        <member name="F:X360.Profile.GeneralColor.White">
            <summary></summary>
        </member>
        <member name="F:X360.Profile.GeneralColor.Yellow">
            <summary></summary>
        </member>
        <member name="F:X360.Profile.GeneralColor.Orange">
            <summary></summary>
        </member>
        <member name="F:X360.Profile.GeneralColor.Pink">
            <summary></summary>
        </member>
        <member name="F:X360.Profile.GeneralColor.Red">
            <summary></summary>
        </member>
        <member name="F:X360.Profile.GeneralColor.Purple">
            <summary></summary>
        </member>
        <member name="F:X360.Profile.GeneralColor.Blue">
            <summary></summary>
        </member>
        <member name="F:X360.Profile.GeneralColor.Green">
            <summary></summary>
        </member>
        <member name="F:X360.Profile.GeneralColor.Brown">
            <summary></summary>
        </member>
        <member name="F:X360.Profile.GeneralColor.Silver">
            <summary></summary>
        </member>
        <member name="T:X360.Profile.GeneralDifficulty">
            <summary>
            Enums for general difficulty presets
            </summary>
        </member>
        <member name="F:X360.Profile.GeneralDifficulty.Normal">
            <summary></summary>
        </member>
        <member name="F:X360.Profile.GeneralDifficulty.Easy">
            <summary></summary>
        </member>
        <member name="F:X360.Profile.GeneralDifficulty.Hard">
            <summary></summary>
        </member>
        <member name="T:X360.Profile.GeneralSensitivity">
            <summary>
            Enums for sensitivity presets
            </summary>
        </member>
        <member name="F:X360.Profile.GeneralSensitivity.Medium">
            <summary></summary>
        </member>
        <member name="F:X360.Profile.GeneralSensitivity.Low">
            <summary></summary>
        </member>
        <member name="F:X360.Profile.GeneralSensitivity.High">
            <summary></summary>
        </member>
        <member name="T:X360.Profile.RaceBrakeControl">
            <summary>
            Enums for break control presets
            </summary>
        </member>
        <member name="F:X360.Profile.RaceBrakeControl.Trigger">
            <summary></summary>
        </member>
        <member name="F:X360.Profile.RaceBrakeControl.Button">
            <summary></summary>
        </member>
        <member name="T:X360.Profile.RaceCamLocation">
            <summary>
            Enums for race cam presets
            </summary>
        </member>
        <member name="F:X360.Profile.RaceCamLocation.Behind">
            <summary></summary>
        </member>
        <member name="F:X360.Profile.RaceCamLocation.InFront">
            <summary></summary>
        </member>
        <member name="F:X360.Profile.RaceCamLocation.Inside">
            <summary></summary>
        </member>
        <member name="T:X360.Profile.RaceSpeedControl">
            <summary>
            Enum for race speed presets
            </summary>
        </member>
        <member name="F:X360.Profile.RaceSpeedControl.Trigger">
            <summary></summary>
        </member>
        <member name="F:X360.Profile.RaceSpeedControl.Button">
            <summary></summary>
        </member>
        <member name="T:X360.Profile.RaceTransition">
            <summary>
            Enums for transmission presets
            </summary>
        </member>
        <member name="F:X360.Profile.RaceTransition.Automatic">
            <summary></summary>
        </member>
        <member name="F:X360.Profile.RaceTransition.Manual">
            <summary></summary>
        </member>
        <member name="T:X360.Profile.VoiceOptions">
            <summary>
            Voice options presets
            </summary>
        </member>
        <member name="F:X360.Profile.VoiceOptions.OnlyHeadset">
            <summary></summary>
        </member>
        <member name="F:X360.Profile.VoiceOptions.OnlySpeaker">
            <summary></summary>
        </member>
        <member name="F:X360.Profile.VoiceOptions.Both">
            <summary></summary>
        </member>
        <member name="T:X360.Profile.SettingType">
            <summary>
            Setting variable types
            </summary>
        </member>
        <member name="F:X360.Profile.SettingType.Context">
            <summary></summary>
        </member>
        <member name="F:X360.Profile.SettingType.UInt32">
            <summary></summary>
        </member>
        <member name="F:X360.Profile.SettingType.Int64">
            <summary></summary>
        </member>
        <member name="F:X360.Profile.SettingType.Double">
            <summary></summary>
        </member>
        <member name="F:X360.Profile.SettingType.Unicode">
            <summary></summary>
        </member>
        <member name="F:X360.Profile.SettingType.Float">
            <summary></summary>
        </member>
        <member name="F:X360.Profile.SettingType.Binary">
            <summary></summary>
        </member>
        <member name="F:X360.Profile.SettingType.DateTime">
            <summary></summary>
        </member>
        <member name="F:X360.Profile.SettingType.Null">
            <summary></summary>
        </member>
        <member name="T:X360.Profile.GamerZone">
            <summary>
            Gamerzones presets
            </summary>
        </member>
        <member name="F:X360.Profile.GamerZone.Xbox">
            <summary></summary>
        </member>
        <member name="F:X360.Profile.GamerZone.Recreation">
            <summary></summary>
        </member>
        <member name="F:X360.Profile.GamerZone.Pro">
            <summary></summary>
        </member>
        <member name="F:X360.Profile.GamerZone.Family">
            <summary></summary>
        </member>
        <member name="F:X360.Profile.GamerZone.Underground">
            <summary></summary>
        </member>
        <member name="F:X360.Profile.GamerZone.Cheater">
            <summary>NOT SURE IF IT WORKS</summary>
        </member>
        <member name="F:X360.Profile.GamerZone.Unknown">
            <summary></summary>
        </member>
        <member name="T:X360.Profile.Region">
            <summary>
            Region presets
            </summary>
        </member>
        <member name="F:X360.Profile.Region.None">
            <summary></summary>
        </member>
        <member name="F:X360.Profile.Region.UnitedArabEmirates">
            <summary></summary>
        </member>
        <member name="F:X360.Profile.Region.Albania">
            <summary></summary>
        </member>
        <member name="F:X360.Profile.Region.Armenia">
            <summary></summary>
        </member>
        <member name="F:X360.Profile.Region.Argentinia">
            <summary></summary>
        </member>
        <member name="F:X360.Profile.Region.Austria">
            <summary></summary>
        </member>
        <member name="F:X360.Profile.Region.Australia">
            <summary></summary>
        </member>
        <member name="F:X360.Profile.Region.Azerbaijan">
            <summary></summary>
        </member>
        <member name="F:X360.Profile.Region.Belgium">
            <summary></summary>
        </member>
        <member name="F:X360.Profile.Region.Bulgaria">
            <summary></summary>
        </member>
        <member name="F:X360.Profile.Region.Bahrain">
            <summary></summary>
        </member>
        <member name="F:X360.Profile.Region.BruneiDarussalam">
            <summary></summary>
        </member>
        <member name="F:X360.Profile.Region.Bolivia">
            <summary></summary>
        </member>
        <member name="F:X360.Profile.Region.Brazil">
            <summary></summary>
        </member>
        <member name="F:X360.Profile.Region.Belarus">
            <summary></summary>
        </member>
        <member name="F:X360.Profile.Region.Belize">
            <summary></summary>
        </member>
        <member name="F:X360.Profile.Region.Canada">
            <summary></summary>
        </member>
        <member name="F:X360.Profile.Region.Unknown1">
            <summary></summary>
        </member>
        <member name="F:X360.Profile.Region.Switzerland">
            <summary></summary>
        </member>
        <member name="F:X360.Profile.Region.Chile">
            <summary></summary>
        </member>
        <member name="F:X360.Profile.Region.China">
            <summary></summary>
        </member>
        <member name="F:X360.Profile.Region.Colombia">
            <summary></summary>
        </member>
        <member name="F:X360.Profile.Region.CostaRica">
            <summary></summary>
        </member>
        <member name="F:X360.Profile.Region.CzechRepublic">
            <summary></summary>
        </member>
        <member name="F:X360.Profile.Region.Germany">
            <summary></summary>
        </member>
        <member name="F:X360.Profile.Region.Denmark">
            <summary></summary>
        </member>
        <member name="F:X360.Profile.Region.DominicanRepublic">
            <summary></summary>
        </member>
        <member name="F:X360.Profile.Region.Algeria">
            <summary></summary>
        </member>
        <member name="F:X360.Profile.Region.Ecuador">
            <summary></summary>
        </member>
        <member name="F:X360.Profile.Region.Estonia">
            <summary></summary>
        </member>
        <member name="F:X360.Profile.Region.Egypt">
            <summary></summary>
        </member>
        <member name="F:X360.Profile.Region.Spain">
            <summary></summary>
        </member>
        <member name="F:X360.Profile.Region.Finland">
            <summary></summary>
        </member>
        <member name="F:X360.Profile.Region.FaroeIslands">
            <summary></summary>
        </member>
        <member name="F:X360.Profile.Region.France">
            <summary></summary>
        </member>
        <member name="F:X360.Profile.Region.GreatBritain">
            <summary></summary>
        </member>
        <member name="F:X360.Profile.Region.Georgia">
            <summary></summary>
        </member>
        <member name="F:X360.Profile.Region.Greece">
            <summary></summary>
        </member>
        <member name="F:X360.Profile.Region.Guatemala">
            <summary></summary>
        </member>
        <member name="F:X360.Profile.Region.HongKong">
            <summary></summary>
        </member>
        <member name="F:X360.Profile.Region.Honduras">
            <summary></summary>
        </member>
        <member name="F:X360.Profile.Region.Croatia">
            <summary></summary>
        </member>
        <member name="F:X360.Profile.Region.Hungary">
            <summary></summary>
        </member>
        <member name="F:X360.Profile.Region.Indonesia">
            <summary></summary>
        </member>
        <member name="F:X360.Profile.Region.Ireland">
            <summary></summary>
        </member>
        <member name="F:X360.Profile.Region.Israel">
            <summary></summary>
        </member>
        <member name="F:X360.Profile.Region.India">
            <summary></summary>
        </member>
        <member name="F:X360.Profile.Region.Iraq">
            <summary></summary>
        </member>
        <member name="F:X360.Profile.Region.Iran">
            <summary></summary>
        </member>
        <member name="F:X360.Profile.Region.Iceland">
            <summary></summary>
        </member>
        <member name="F:X360.Profile.Region.Italy">
            <summary></summary>
        </member>
        <member name="F:X360.Profile.Region.Jamaica">
            <summary></summary>
        </member>
        <member name="F:X360.Profile.Region.Jordan">
            <summary></summary>
        </member>
        <member name="F:X360.Profile.Region.Japan">
            <summary></summary>
        </member>
        <member name="F:X360.Profile.Region.Kenya">
            <summary></summary>
        </member>
        <member name="F:X360.Profile.Region.Kyrgyzstan">
            <summary></summary>
        </member>
        <member name="F:X360.Profile.Region.Korea">
            <summary></summary>
        </member>
        <member name="F:X360.Profile.Region.Kuwait">
            <summary></summary>
        </member>
        <member name="F:X360.Profile.Region.Kazakhstan">
            <summary></summary>
        </member>
        <member name="F:X360.Profile.Region.Lebanon">
            <summary></summary>
        </member>
        <member name="F:X360.Profile.Region.Liechtenstein">
            <summary></summary>
        </member>
        <member name="F:X360.Profile.Region.Lithuania">
            <summary></summary>
        </member>
        <member name="F:X360.Profile.Region.Luxembourg">
            <summary></summary>
        </member>
        <member name="F:X360.Profile.Region.Latvia">
            <summary></summary>
        </member>
        <member name="F:X360.Profile.Region.Libya">
            <summary></summary>
        </member>
        <member name="F:X360.Profile.Region.Morocco">
            <summary></summary>
        </member>
        <member name="F:X360.Profile.Region.Monaco">
            <summary></summary>
        </member>
        <member name="F:X360.Profile.Region.Macodonia">
            <summary></summary>
        </member>
        <member name="F:X360.Profile.Region.Mongolia">
            <summary></summary>
        </member>
        <member name="F:X360.Profile.Region.Macao">
            <summary></summary>
        </member>
        <member name="F:X360.Profile.Region.Maldives">
            <summary></summary>
        </member>
        <member name="F:X360.Profile.Region.Mexico">
            <summary></summary>
        </member>
        <member name="F:X360.Profile.Region.Malaysia">
            <summary></summary>
        </member>
        <member name="F:X360.Profile.Region.Nicaragua">
            <summary></summary>
        </member>
        <member name="F:X360.Profile.Region.Netherlands">
            <summary></summary>
        </member>
        <member name="F:X360.Profile.Region.Norway">
            <summary></summary>
        </member>
        <member name="F:X360.Profile.Region.NewZealand">
            <summary></summary>
        </member>
        <member name="F:X360.Profile.Region.Oman">
            <summary></summary>
        </member>
        <member name="F:X360.Profile.Region.Panama">
            <summary></summary>
        </member>
        <member name="F:X360.Profile.Region.Peru">
            <summary></summary>
        </member>
        <member name="F:X360.Profile.Region.Philippines">
            <summary></summary>
        </member>
        <member name="F:X360.Profile.Region.Pakistan">
            <summary></summary>
        </member>
        <member name="F:X360.Profile.Region.Poland">
            <summary></summary>
        </member>
        <member name="F:X360.Profile.Region.PuertoRico">
            <summary></summary>
        </member>
        <member name="F:X360.Profile.Region.Portugal">
            <summary></summary>
        </member>
        <member name="F:X360.Profile.Region.Paraguay">
            <summary></summary>
        </member>
        <member name="F:X360.Profile.Region.Qatar">
            <summary></summary>
        </member>
        <member name="F:X360.Profile.Region.Romania">
            <summary></summary>
        </member>
        <member name="F:X360.Profile.Region.RussianFederation">
            <summary></summary>
        </member>
        <member name="F:X360.Profile.Region.SaudiArabia">
            <summary></summary>
        </member>
        <member name="F:X360.Profile.Region.Sweden">
            <summary></summary>
        </member>
        <member name="F:X360.Profile.Region.Singapore">
            <summary></summary>
        </member>
        <member name="F:X360.Profile.Region.Slovenia">
            <summary></summary>
        </member>
        <member name="F:X360.Profile.Region.SlovakRepublic">
            <summary></summary>
        </member>
        <member name="F:X360.Profile.Region.Unknown2">
            <summary></summary>
        </member>
        <member name="F:X360.Profile.Region.ElSalvador">
            <summary></summary>
        </member>
        <member name="F:X360.Profile.Region.Syria">
            <summary></summary>
        </member>
        <member name="F:X360.Profile.Region.Thailand">
            <summary></summary>
        </member>
        <member name="F:X360.Profile.Region.Tunisia">
            <summary></summary>
        </member>
        <member name="F:X360.Profile.Region.Turkey">
            <summary></summary>
        </member>
        <member name="F:X360.Profile.Region.TrinidadTobago">
            <summary></summary>
        </member>
        <member name="F:X360.Profile.Region.Taiwan">
            <summary></summary>
        </member>
        <member name="F:X360.Profile.Region.Ukraine">
            <summary></summary>
        </member>
        <member name="F:X360.Profile.Region.UnitedStates">
            <summary></summary>
        </member>
        <member name="F:X360.Profile.Region.Urugay">
            <summary></summary>
        </member>
        <member name="F:X360.Profile.Region.Uzbekistan">
            <summary></summary>
        </member>
        <member name="F:X360.Profile.Region.Venezuela">
            <summary></summary>
        </member>
        <member name="F:X360.Profile.Region.VietNam">
            <summary></summary>
        </member>
        <member name="F:X360.Profile.Region.Yemen">
            <summary></summary>
        </member>
        <member name="F:X360.Profile.Region.SouthAfrica">
            <summary></summary>
        </member>
        <member name="F:X360.Profile.Region.Zimbabwe">
            <summary></summary>
        </member>
        <member name="T:X360.Profile.TitlePlayedEntry">
            <summary>
            Object to hold title played data
            </summary>
        </member>
        <member name="F:X360.Profile.TitlePlayedEntry.PossibleCount">
            <summary>
            Possible achievement count
            </summary>
        </member>
        <member name="F:X360.Profile.TitlePlayedEntry.EarnedCount">
            <summary>
            Earned count
            </summary>
        </member>
        <member name="F:X360.Profile.TitlePlayedEntry.PossibleWorth">
            <summary>
            Possible achievement total
            </summary>
        </member>
        <member name="F:X360.Profile.TitlePlayedEntry.EarnedWorth">
            <summary>
            Earned total score
            </summary>
        </member>
        <member name="M:X360.Profile.TitlePlayedEntry.Update">
            <summary>
            Update title information
            </summary>
            <returns></returns>
        </member>
        <member name="P:X360.Profile.TitlePlayedEntry.TitleID">
            <summary>
            Title ID of entry
            </summary>
        </member>
        <member name="P:X360.Profile.TitlePlayedEntry.LastLoadedDT">
            <summary>
            Last played date/time
            </summary>
        </member>
        <member name="P:X360.Profile.TitlePlayedEntry.Reserved">
            <summary>
            Reserved data
            </summary>
        </member>
        <member name="P:X360.Profile.TitlePlayedEntry.Title">
            <summary>
            Title name
            </summary>
        </member>
        <member name="T:X360.Profile.DashGPD">
            <summary>
            Object to handle profile GPD
            </summary>
        </member>
        <member name="M:X360.Profile.DashGPD.UpdateGamerScore(System.UInt32)">
            <summary>
            Specify a gamerscore to update to
            </summary>
            <param name="NewGS"></param>
            <returns></returns>
        </member>
        <member name="M:X360.Profile.DashGPD.UpdateGamerScore">
            <summary>
            Updates the gamerscore total
            </summary>
            <returns></returns>
        </member>
        <member name="M:X360.Profile.DashGPD.GetGamerscore">
            <summary>
            Grabs current gamerscore
            </summary>
            <returns></returns>
        </member>
        <member name="M:X360.Profile.DashGPD.CalculateAchievementsPossible">
            <summary>
            Calculates the total achievement count possible
            </summary>
            <returns></returns>
        </member>
        <member name="M:X360.Profile.DashGPD.CalculateAchievementsTotal">
            <summary>
            Calculates the total achievements earned
            </summary>
            <returns></returns>
        </member>
        <member name="M:X360.Profile.DashGPD.CalculateGamerScorePossible">
            <summary>
            Calculates total possbile gamerscore
            </summary>
            <returns></returns>
        </member>
        <member name="M:X360.Profile.DashGPD.CalculateGamerScoreTotal">
            <summary>
            Calculates Gamerscore earned
            </summary>
            <returns></returns>
        </member>
        <member name="M:X360.Profile.DashGPD.AddGameViaLiveHack(System.UInt32)">
            <summary>
            Adds a game through the ID hack
            </summary>
            <param name="xTitleID"></param>
            <returns></returns>
        </member>
        <member name="M:X360.Profile.DashGPD.AddGameViaGPD(X360.Profile.GameGPD)">
            <summary>
            Adds a game via the GPD
            </summary>
            <param name="xTitle"></param>
            <returns></returns>
        </member>
        <member name="M:X360.Profile.DashGPD.UpdateTitle(X360.Profile.GameGPD)">
            <summary>
            Updates a title from it's GPD
            </summary>
            <param name="xTitle"></param>
            <returns></returns>
        </member>
        <member name="M:X360.Profile.DashGPD.#ctor(System.String)">
            <summary>
            Initializes an instance of this object
            </summary>
            <param name="GPDLocale"></param>
        </member>
        <member name="P:X360.Profile.DashGPD.TitlesPlayed">
            <summary>
            Array to hold titles played
            </summary>
        </member>
        <member name="T:X360.Media.MusicExcepts">
            <summary>
            Object to hold music exceptions
            </summary>
        </member>
        <member name="P:X360.Media.MusicExcepts.NotMusic">
            <summary>
            Not a music package
            </summary>
        </member>
        <member name="T:X360.Media.MusicFile">
            <summary>
            Object to hold music files
            </summary>
        </member>
        <member name="M:X360.Media.MusicFile.#ctor(System.String)">
            <summary>
            Initializes this object
            </summary>
            <param name="FileLocale"></param>
        </member>
        <member name="M:X360.Media.MusicFile.ExtractWMA(X360.IO.DJsIO)">
            <summary>
            Extracts the music file
            </summary>
            <param name="xIOOut"></param>
            <returns></returns>
        </member>
        <member name="M:X360.Media.MusicFile.ExtractWMA">
            <summary>
            Extracts the file via end user location
            </summary>
            <returns></returns>
        </member>
        <member name="P:X360.Media.MusicFile.Song">
            <summary>
            Song title
            </summary>
        </member>
        <member name="P:X360.Media.MusicFile.Artist">
            <summary>
            Artist
            </summary>
        </member>
        <member name="P:X360.Media.MusicFile.Album">
            <summary>
            Album
            </summary>
        </member>
        <member name="P:X360.Media.MusicFile.Genre">
            <summary>
            Genre
            </summary>
        </member>
        <member name="P:X360.Media.MusicFile.WMASize">
            <summary>
            Size of file
            </summary>
        </member>
        <member name="T:X360.IO.FATXExtensions.Extensions">
            <summary>
            Class to hold IO extensions
            </summary>
        </member>
        <member name="M:X360.IO.FATXExtensions.Extensions.BlockRemainderFATX(X360.IO.DJsIO,X360.FATX.FATXPartition)">
            <summary>
            Returns the amount of data in the last block
            </summary>
        </member>
        <member name="M:X360.IO.FATXExtensions.Extensions.BlockCountFATX(X360.IO.DJsIO,X360.FATX.FATXPartition)">
            <summary>
            Returns the count of blocks this file contains
            </summary>
        </member>
        <member name="T:X360.IO.STFSExtensions.Extensions">
            <summary>
            Class to hold IO extensions
            </summary>
        </member>
        <member name="M:X360.IO.STFSExtensions.Extensions.BlockCountSTFS(X360.IO.DJsIO)">
            <summary>
            Returns the count of blocks this file contains
            </summary>
        </member>
        <member name="M:X360.IO.STFSExtensions.Extensions.BlockRemainderSTFS(X360.IO.DJsIO)">
            <summary>
            Returns the amount of data in the last block
            </summary>
        </member>
        <member name="T:X360.IO.SearchExtensions.Extensions">
            <summary>
            Class to hold IO extensions
            </summary>
        </member>
        <member name="M:X360.IO.SearchExtensions.Extensions.SearchBinary(X360.IO.DJsIO,System.Byte[],System.Boolean)">
            <summary>
            Searches the stream for a set of bytes
            </summary>
            <param name="y"></param>
            <param name="xData"></param>
            <param name="xStopWhenFound"></param>
            <returns></returns>
        </member>
        <member name="M:X360.IO.SearchExtensions.Extensions.SearchASCII(X360.IO.DJsIO,System.String,System.Boolean)">
            <summary>
            Searching the stream for an ASCII string
            </summary>
            <param name="y"></param>
            <param name="xData"></param>
            <param name="xStopWhenFound"></param>
            <returns></returns>
        </member>
        <member name="M:X360.IO.SearchExtensions.Extensions.SearchUnicode(X360.IO.DJsIO,System.String,System.Boolean)">
            <summary>
            Searches the file for a Unicode string, Endian based on stream's Endian
            </summary>
            <param name="y"></param>
            <param name="xData"></param>
            <param name="xStopWhenFound"></param>
            <returns></returns>
        </member>
        <member name="T:X360.IO.ExtraExtensions.Extensions">
            <summary>
            Class to hold IO extensions
            </summary>
        </member>
        <member name="M:X360.IO.ExtraExtensions.Extensions.ImageFromStream(X360.IO.DJsIO)">
            <summary>
            Attempts to return an Image from this stream
            </summary>
            <returns></returns>
        </member>
        <member name="M:X360.IO.ExtraExtensions.Extensions.InsertBlankData(X360.IO.DJsIO,System.Int64,System.Int32)">
            <summary>
            Inserts bytes as needed
            </summary>
            <param name="xLocation"></param>
            <param name="xAddSize"></param>
            <param name="y"></param>
            <returns></returns>
        </member>
        <member name="T:X360.IO.StringForm">
            <summary>
            String type
            </summary>
        </member>
        <member name="F:X360.IO.StringForm.ASCII">
            <summary>
            ACSII String
            </summary>
        </member>
        <member name="F:X360.IO.StringForm.Unicode">
            <summary>
            Unicode String
            </summary>
        </member>
        <member name="T:X360.IO.DJFileMode">
            <summary>
            File Type
            </summary>
        </member>
        <member name="F:X360.IO.DJFileMode.Create">
            <summary>
            Create a file
            </summary>
        </member>
        <member name="F:X360.IO.DJFileMode.Open">
            <summary>
            Open a file
            </summary>
        </member>
        <member name="T:X360.IO.PadLocale">
            <summary>
            Pad direction
            </summary>
        </member>
        <member name="F:X360.IO.PadLocale.Left">
            <summary>
            Pad to the left
            </summary>
        </member>
        <member name="F:X360.IO.PadLocale.Right">
            <summary>
            Pad to the right
            </summary>
        </member>
        <member name="T:X360.IO.PadType">
            <summary>
            Generic pad types
            </summary>
        </member>
        <member name="F:X360.IO.PadType.Null">
            <summary>
            Null pad
            </summary>
        </member>
        <member name="F:X360.IO.PadType.Space">
            <summary>
            Space pad
            </summary>
        </member>
        <member name="T:X360.IO.StringRead">
            <summary>
            How to read  a string
            </summary>
        </member>
        <member name="F:X360.IO.StringRead.Defined">
            <summary>
            Defined length
            </summary>
        </member>
        <member name="F:X360.IO.StringRead.ToNull">
            <summary>
            Read to null
            </summary>
        </member>
        <member name="F:X360.IO.StringRead.PrecedingLength">
            <summary>
            Reads a string with a byte size in front of it
            </summary>
        </member>
        <member name="T:X360.IO.DataType">
            <summary>
            IO Type
            </summary>
        </member>
        <member name="F:X360.IO.DataType.None">
            <summary>
            No specific type
            </summary>
        </member>
        <member name="F:X360.IO.DataType.Memory">
            <summary>
            Memory IO
            </summary>
        </member>
        <member name="F:X360.IO.DataType.File">
            <summary>
            File IO
            </summary>
        </member>
        <member name="F:X360.IO.DataType.Drive">
            <summary>
            Device IO
            </summary>
        </member>
        <member name="F:X360.IO.DataType.Real">
            <summary>
            
            </summary>
        </member>
        <member name="F:X360.IO.DataType.MultiFile">
            <summary>
            Contains multiple IO's
            </summary>
        </member>
        <member name="F:X360.IO.DataType.Other">
            <summary>
            Some other IO
            </summary>
        </member>
        <member name="T:X360.IO.IOExcepts">
            <summary>
            IO Exceptions
            </summary>
        </member>
        <member name="P:X360.IO.IOExcepts.AccessError">
            <summary>
            Not accessed
            </summary>
        </member>
        <member name="P:X360.IO.IOExcepts.DirectError">
            <summary>
            Invalid directory index
            </summary>
        </member>
        <member name="P:X360.IO.IOExcepts.PositionError">
            <summary>
            Position error
            </summary>
        </member>
        <member name="P:X360.IO.IOExcepts.Index">
            <summary>
            Index out of bounds
            </summary>
        </member>
        <member name="P:X360.IO.IOExcepts.DoesntExist">
            <summary>
            Path unexistant
            </summary>
        </member>
        <member name="P:X360.IO.IOExcepts.CreateError">
            <summary>
            Cannot create path or file
            </summary>
        </member>
        <member name="P:X360.IO.IOExcepts.MultiAccessError">
            <summary>
            Returns this when one of the files in a multifile IO could not be accessed
            </summary>
        </member>
        <member name="T:X360.IO.DJsIO">
            <summary>
            Object for generic IO
            </summary>
        </member>
        <member name="F:X360.IO.DJsIO.xThisData">
            <summary>
            This type of IO
            </summary>
        </member>
        <member name="F:X360.IO.DJsIO.xFile">
            <summary>
            The file name of which the stream is referenced to
            </summary>
        </member>
        <member name="F:X360.IO.DJsIO.xStream">
            <summary>
            The stream of the instance
            </summary>
        </member>
        <member name="M:X360.IO.DJsIO.XSetStrings">
            <summary>
            Sets the strings of a file like string
            </summary>
        </member>
        <member name="M:X360.IO.DJsIO.#ctor(System.String,X360.IO.DJFileMode,System.Boolean)">
            <summary>
            Create instance of IO directly to a file with file mode type
            </summary>
            <param name="xFileIn"></param>
            <param name="xType"></param>
            <param name="BigEndian"></param>
        </member>
        <member name="M:X360.IO.DJsIO.#ctor(X360.IO.DJFileMode,System.String,System.String,System.Boolean)">
            <summary>
            Create instance of IO allowing the user to choose open (xSave = false)
            or save (xSave = true) location. xTitle and xFilter are the normal
            open/save Title
            </summary>
            <param name="BigEndian"></param>
            <param name="xTitle"></param>
            <param name="xFilter"></param>
            <param name="xType"></param>
        </member>
        <member name="M:X360.IO.DJsIO.#ctor(System.Windows.Forms.SaveFileDialog@,System.Boolean)">
            <summary>
            Use your own Save File Dialog
            </summary>
            <param name="xSFDin"></param>
            <param name="BigEndian"></param>
        </member>
        <member name="M:X360.IO.DJsIO.#ctor(System.Windows.Forms.OpenFileDialog@,System.Boolean)">
            <summary>
            Use your own Open File Dialog
            </summary>
            <param name="xOFD"></param>
            <param name="BigEndian"></param>
        </member>
        <member name="M:X360.IO.DJsIO.#ctor(System.IO.Stream,System.Boolean)">
            <summary>
            Imports a generic Stream
            </summary>
            <param name="ImportGeneric"></param>
            <param name="BigEndian"></param>
        </member>
        <member name="M:X360.IO.DJsIO.#ctor(System.Byte[],System.Boolean)">
            <summary>
            Creates an instance of IO for byte array's.
            </summary>
            <param name="xIn"></param>
            <param name="BigEndian"></param>
        </member>
        <member name="M:X360.IO.DJsIO.#ctor(System.Int64,System.Boolean)">
            <summary>
            Creates a stream on a byte array to a specified size
            </summary>
            <param name="ArraySize"></param>
            <param name="BigEndian"></param>
        </member>
        <member name="M:X360.IO.DJsIO.#ctor(System.Boolean)">
            <summary>
            Makes a temporary file stream
            </summary>
            <param name="BigEndian"></param>
        </member>
        <member name="M:X360.IO.DJsIO.#ctor">
            <summary>
            Default ref
            </summary>
        </member>
        <member name="M:X360.IO.DJsIO.ReadBytes(System.Int32)">
            <summary>
            Read a set amount of bytes
            </summary>
            <param name="xSize"></param>
            <returns></returns>
        </member>
        <member name="M:X360.IO.DJsIO.ReadInt16">
            <summary>
            Reads a signed 16-bit (2 bytes) integer
            </summary>
            <returns></returns>
        </member>
        <member name="M:X360.IO.DJsIO.ReadInt16(System.Boolean)">
            <summary>
            Reads a signed 16-bit (2 bytes) integer in specified endian 
            </summary>
            <param name="BigEndian"></param>
            <returns></returns>
        </member>
        <member name="M:X360.IO.DJsIO.ReadUInt24">
            <summary>
            Reads a 24-bit integer (3 bytes)
            </summary>
            <returns></returns>
        </member>
        <member name="M:X360.IO.DJsIO.ReadUInt24(System.Boolean)">
            <summary>
            Reads an unsigned 24-bit (3 byte) integer in specified mode
            </summary>
            <param name="BigEndian"></param>
            <returns></returns>
        </member>
        <member name="M:X360.IO.DJsIO.ReadUInt40">
            <summary>
            Reads a 40-bit integer (5 bytes)
            </summary>
            <returns></returns>
        </member>
        <member name="M:X360.IO.DJsIO.ReadUInt40(System.Boolean)">
            <summary>
            Reads a 40-bit integer (5 bytes) in a specified Endian
            </summary>
            <returns></returns>
        </member>
        <member name="M:X360.IO.DJsIO.ReadUInt48">
            <summary>
            Reads a 48-bit integer (6 bytes)
            </summary>
            <returns></returns>
        </member>
        <member name="M:X360.IO.DJsIO.ReadUInt48(System.Boolean)">
            <summary>
            Reads a 48-bit integer (6 bytes)
            </summary>
            <returns></returns>
        </member>
        <member name="M:X360.IO.DJsIO.ReadUInt56">
            <summary>
            Reads a 56-bit integer (7 bytes)
            </summary>
            <returns></returns>
        </member>
        <member name="M:X360.IO.DJsIO.ReadUInt56(System.Boolean)">
            <summary>
            Reads an unsinged 56 bit Int in specified mode
            </summary>
            <param name="BigEndian"></param>
            <returns></returns>
        </member>
        <member name="M:X360.IO.DJsIO.ReadInt32">
            <summary>
            Reads a 32-bit (4 bytes) signed integer
            </summary>
            <returns></returns>
        </member>
        <member name="M:X360.IO.DJsIO.ReadInt32(System.Boolean)">
            <summary>
            Read a 32-bit (4 bytes) signed integer to a specified endian
            </summary>
            <returns></returns>
        </member>
        <member name="M:X360.IO.DJsIO.ReadInt64">
            <summary>
            Reads a 64-bit (8 bytes) integer
            </summary>
            <returns></returns>
        </member>
        <member name="M:X360.IO.DJsIO.ReadInt64(System.Boolean)">
            <summary>
            Reads a 64-bit (8 bytes) integer to a specified endian
            </summary>
            <returns></returns>
        </member>
        <member name="M:X360.IO.DJsIO.ReadByte">
            <summary>
            Reads a 8-bit (1 byte) integer
            </summary>
            <returns></returns>
        </member>
        <member name="M:X360.IO.DJsIO.ReadSByte">
            <summary>
            Reads a Signed 8 bit (1 byte) integer
            </summary>
            <returns></returns>
        </member>
        <member name="M:X360.IO.DJsIO.ReadSingle">
            <summary>
            Reads a Single
            </summary>
            <returns></returns>
        </member>
        <member name="M:X360.IO.DJsIO.ReadSingle(System.Boolean)">
            <summary>
            Reads a Single in a specified endian
            </summary>
            <returns></returns>
        </member>
        <member name="M:X360.IO.DJsIO.ReadDouble">
            <summary>
            Reads a Double
            </summary>
            <returns></returns>
        </member>
        <member name="M:X360.IO.DJsIO.ReadDouble(System.Boolean)">
            <summary>
            Reads a Double in a specified endian
            </summary>
            <returns></returns>
        </member>
        <member name="M:X360.IO.DJsIO.ReadUInt16">
            <summary>
            Reads a 16-bit (2 bytes) integer
            </summary>
            <returns></returns>
        </member>
        <member name="M:X360.IO.DJsIO.ReadUInt16(System.Boolean)">
            <summary>
            Reads an unsigned 16-bit (2 bytes) integer in a specified endian
            </summary>
            <returns></returns>
        </member>
        <member name="M:X360.IO.DJsIO.ReadUInt32">
            <summary>
            Reads an unsigned 32-bit (4 bytes) integer
            </summary>
            <returns></returns>
        </member>
        <member name="M:X360.IO.DJsIO.ReadUInt32(System.Boolean)">
            <summary>
            Reads an unsigned 32-bit (4 bytes) integer to a specified endian
            </summary>
            <returns></returns>
        </member>
        <member name="M:X360.IO.DJsIO.ReadUInt64">
            <summary>
            Reads an unsigned 64-bit (8 bytes) integer
            </summary>
            <returns></returns>
        </member>
        <member name="M:X360.IO.DJsIO.ReadUInt64(System.Boolean)">
            <summary>
            Reads an unsigned 64-bit (8 bytes) integer to a specified endian
            </summary>
            <returns></returns>
        </member>
        <member name="M:X360.IO.DJsIO.ReadBool">
            <summary>
            Reads a bit bool (0 no, 1 yes)
            </summary>
            <returns></returns>
        </member>
        <member name="M:X360.IO.DJsIO.ReadLine">
            <summary>
            Reads an ASCII line
            </summary>
            <returns></returns>
        </member>
        <member name="M:X360.IO.DJsIO.ReadLine(System.Byte)">
            <summary>
            Reads an ASCII line to a specified line break
            </summary>
            <param name="BreakType"></param>
            <returns></returns>
        </member>
        <member name="M:X360.IO.DJsIO.ReadLine(X360.IO.StringForm)">
            <summary>
            Reads a line from a specified string format
            </summary>
            <param name="xType"></param>
            <returns></returns>
        </member>
        <member name="M:X360.IO.DJsIO.ReadLine(X360.IO.StringForm,System.Boolean)">
            <summary>
            Reads a line of a specific string format and endian
            </summary>
            <param name="xType"></param>
            <param name="BigEndian"></param>
            <returns></returns>
        </member>
        <member name="M:X360.IO.DJsIO.ReadLine(X360.IO.StringForm,System.Int16,System.Boolean)">
            <summary>
            Reads a line from a specific string format, line break, and endian
            </summary>
            <param name="xType"></param>
            <param name="BreakIndicator"></param>
            <param name="BigEndian"></param>
            <returns></returns>
        </member>
        <member name="M:X360.IO.DJsIO.ReadString(X360.IO.StringForm)">
            <summary>
            Reads a ToNull String
            </summary>
            <param name="xStringType"></param>
            <returns></returns>
        </member>
        <member name="M:X360.IO.DJsIO.ReadString(X360.IO.StringForm,System.Boolean)">
            <summary>
            Reads a string to null wif specified endian
            </summary>
            <param name="xStringType"></param>
            <param name="BigEndian"></param>
            <returns></returns>
        </member>
        <member name="M:X360.IO.DJsIO.ReadString(X360.IO.StringForm,System.Int32)">
            <summary>
            Reads a string
            </summary>
            <param name="xStringSize"></param>
            <param name="xStringType"></param>
            <returns></returns>
        </member>
        <member name="M:X360.IO.DJsIO.ReadString(X360.IO.StringForm,System.Int32,System.Boolean)">
            <summary>
            Reads a string
            </summary>
            <param name="xStringSize"></param>
            <param name="xStringType"></param>
            <param name="BigEndian"></param>
            <returns></returns>
        </member>
        <member name="M:X360.IO.DJsIO.ReadString(X360.IO.StringForm,System.Int32,X360.IO.StringRead)">
            <summary>
            Reads a string with special circumstance capability
            </summary>
            <param name="xStringSize"></param>
            <param name="xStringType"></param>
            <param name="xRead"></param>
            <returns></returns>
        </member>
        <member name="M:X360.IO.DJsIO.ReadString(X360.IO.StringForm,System.Int32,X360.IO.StringRead,System.Boolean)">
            <summary>
            Reads a string with special circumstance capability
            </summary>
            <param name="xStringSize"></param>
            <param name="xStringType"></param>
            <param name="xRead"></param>
            <param name="BigEndian"></param>
            <returns></returns>
        </member>
        <member name="M:X360.IO.DJsIO.ReadHexString(System.Int32)">
            <summary>
            Reads bytes and returns it as a Hexadecimal String
            </summary>
            <param name="xLength"></param>
            <returns></returns>
        </member>
        <member name="M:X360.IO.DJsIO.ReadFileTime">
            <summary>
            Reads a File Time Stamp (8 bytes for time)
            </summary>
            <returns></returns>
        </member>
        <member name="M:X360.IO.DJsIO.ReadStream">
            <summary>
            WARNING: Only use on small files, will throw Exception if not enough memory
            </summary>
            <returns></returns>
        </member>
        <member name="M:X360.IO.DJsIO.Write(System.Byte[])">
            <summary>
            Writes a Byte Array
            </summary>
            <param name="xIn"></param>
        </member>
        <member name="M:X360.IO.DJsIO.Write(System.Int16)">
            <summary>
            Writes a signed 16-bit (2 bytes) integer
            </summary>
            <param name="xIn"></param>
        </member>
        <member name="M:X360.IO.DJsIO.Write(System.Int16,System.Boolean)">
            <summary>
            Writes a short in specified Endian
            </summary>
            <param name="xIn"></param>
            <param name="BigEndian"></param>
        </member>
        <member name="M:X360.IO.DJsIO.Write(System.Int32)">
            <summary>
            Writes a signed 32-bit (4 bytes) integer
            </summary>
            <param name="xIn"></param>
        </member>
        <member name="M:X360.IO.DJsIO.Write(System.Int32,System.Boolean)">
            <summary>
            Writes a signed 32-bit (4 byte) integer to a specified endian
            </summary>
            <param name="xIn"></param>
            <param name="BigEndian"></param>
        </member>
        <member name="M:X360.IO.DJsIO.Write(System.Int64)">
            <summary>
            Writes a signed 64-bit (8 bytes) integer
            </summary>
            <param name="xIn"></param>
        </member>
        <member name="M:X360.IO.DJsIO.Write(System.Int64,System.Boolean)">
            <summary>
            Writes a signed 64-bit (8 byte) integer to a specified endian
            </summary>
            <param name="xIn"></param>
            <param name="BigEndian"></param>
        </member>
        <member name="M:X360.IO.DJsIO.Write(System.UInt16)">
            <summary>
            Writes an unsigned 16-bit (2 bytes) integer
            </summary>
            <param name="xIn"></param>
        </member>
        <member name="M:X360.IO.DJsIO.Write(System.UInt16,System.Boolean)">
            <summary>
            Write an unsigned 16-bit (2 bytes) integer in a specified endian
            </summary>
            <param name="xIn"></param>
            <param name="BigEndian"></param>
        </member>
        <member name="M:X360.IO.DJsIO.Write(System.UInt32)">
            <summary>
            Write an unsigned 32-bit (4 bytes) integer
            </summary>
            <param name="xIn"></param>
        </member>
        <member name="M:X360.IO.DJsIO.Write(System.UInt32,System.Boolean)">
            <summary>
            Write an unsigned 32-bit (4 bytes) integer in a specifed endian
            </summary>
            <param name="xIn"></param>
            <param name="BigEndian"></param>
        </member>
        <member name="M:X360.IO.DJsIO.Write(System.UInt64)">
            <summary>
            Writes an unsigned 64-bit (8 bytes) integer
            </summary>
            <param name="xIn"></param>
        </member>
        <member name="M:X360.IO.DJsIO.Write(System.UInt64,System.Boolean)">
            <summary>
            Writes an unsigned 64-bit (8 bytes) integer to a specified endian
            </summary>
            <param name="xIn"></param>
            <param name="BigEndian"></param>
        </member>
        <member name="M:X360.IO.DJsIO.Write(System.Single)">
            <summary>
            Writes a single/float
            </summary>
            <param name="xIn"></param>
        </member>
        <member name="M:X360.IO.DJsIO.Write(System.Single,System.Boolean)">
            <summary>
            Writes a single/float to a specified endian
            </summary>
            <param name="xIn"></param>
            <param name="BigEndian"></param>
        </member>
        <member name="M:X360.IO.DJsIO.Write(System.Double)">
            <summary>
            Writes a double
            </summary>
            <param name="xIn"></param>
        </member>
        <member name="M:X360.IO.DJsIO.Write(System.Double,System.Boolean)">
            <summary>
            Writes a double to a specified endian
            </summary>
            <param name="xIn"></param>
            <param name="BigEndian"></param>
        </member>
        <member name="M:X360.IO.DJsIO.Write(System.SByte)">
            <summary>
            Writes a Signed Byte
            </summary>
            <param name="xIn"></param>
        </member>
        <member name="M:X360.IO.DJsIO.Write(System.Boolean)">
            <summary>
            Writes a bool byte (1 yes, 0 no)
            </summary>
            <param name="xIn"></param>
        </member>
        <member name="M:X360.IO.DJsIO.WriteUInt24(System.UInt32)">
            <summary>
            Writes 24-bit (3 byte) integers
            </summary>
            <param name="xIn"></param>
        </member>
        <member name="M:X360.IO.DJsIO.WriteUInt24(System.UInt32,System.Boolean)">
            <summary>
            Writes 24-bit (3 byte) integers to a specified endian
            </summary>
            <param name="xIn"></param>
            <param name="BigEndian"></param>
        </member>
        <member name="M:X360.IO.DJsIO.WriteUInt40(System.UInt64)">
            <summary>
            Writes 40-bit (5 byte) integers
            </summary>
            <param name="xIn"></param>
        </member>
        <member name="M:X360.IO.DJsIO.WriteUInt40(System.UInt64,System.Boolean)">
            <summary>
            Writes 40-bit (5 bytes) integers to specified endian
            </summary>
            <param name="xIn"></param>
            <param name="BigEndian"></param>
        </member>
        <member name="M:X360.IO.DJsIO.WriteUInt48(System.UInt64)">
            <summary>
            Writes a 48-bit (6 bytes) integer
            </summary>
            <param name="xIn"></param>
        </member>
        <member name="M:X360.IO.DJsIO.WriteUInt48(System.UInt64,System.Boolean)">
            <summary>
            Writes 48-bit (6 bytes) integer to a specified endian
            </summary>
            <param name="xIn"></param>
            <param name="BigEndian"></param>
        </member>
        <member name="M:X360.IO.DJsIO.WriteUInt56(System.UInt64)">
            <summary>
            Writes a 56-bit (7 byte) integer
            </summary>
            <param name="xIn"></param>
        </member>
        <member name="M:X360.IO.DJsIO.WriteUInt56(System.UInt64,System.Boolean)">
            <summary>
            Writes 56-bit (7 byte) integers to a specified endian
            </summary>
            <param name="xIn"></param>
            <param name="BigEndian"></param>
        </member>
        <member name="M:X360.IO.DJsIO.Write(System.String)">
            <summary>
            Writes an ASCII string
            </summary>
            <param name="xIn"></param>
        </member>
        <member name="M:X360.IO.DJsIO.Write(System.String,X360.IO.StringForm)">
            <summary>
            Writes a specified type of string
            </summary>
            <param name="xIn"></param>
            <param name="xType"></param>
        </member>
        <member name="M:X360.IO.DJsIO.Write(System.String,X360.IO.StringForm,System.Int32,X360.IO.PadLocale,System.Char)">
            <summary>
            Pads a string and writes it
            </summary>
            <param name="xIn"></param>
            <param name="xType"></param>
            <param name="xDesiredSize"></param>
            <param name="xPadLocale"></param>
            <param name="PadChar"></param>
        </member>
        <member name="M:X360.IO.DJsIO.WriteHexString(System.String)">
            <summary>
            Attempts to write a hexadecimal string
            </summary>
            <param name="xIn"></param>
        </member>
        <member name="M:X360.IO.DJsIO.Write(System.Byte)">
            <summary>
            Writes a byte (8-bits)
            </summary>
            <param name="xIn"></param>
        </member>
        <member name="M:X360.IO.DJsIO.WriteFileTime(System.DateTime)">
            <summary>
            Writes a File Time TimeStamp
            </summary>
            <param name="xIn"></param>
        </member>
        <member name="M:X360.IO.DJsIO.Flush">
            <summary>
            Flushes the stream and writes the pending data (if any)
            </summary>
        </member>
        <member name="M:X360.IO.DJsIO.Close">
            <summary>
            Closes the stream
            </summary>
        </member>
        <member name="M:X360.IO.DJsIO.Dispose">
            <summary>
            Disposes of the stream
            </summary>
            <returns></returns>
        </member>
        <member name="M:X360.IO.DJsIO.OpenAgain">
            <summary>
            Reopens the stream
            </summary>
            <returns></returns>
        </member>
        <member name="M:X360.IO.DJsIO.GrabStream">
            <summary>
            Returns the stream
            </summary>
            <returns></returns>
        </member>
        <member name="M:X360.IO.DJsIO.SetLength(System.Int64)">
            <summary>
            Sets the length of the stream (not always applicable)
            </summary>
            <param name="xLen"></param>
            <returns></returns>
        </member>
        <member name="M:X360.IO.DJsIO.GetAccessed">
            <summary>
            Gets a bool if instance is valid
            </summary>
            <returns></returns>
        </member>
        <member name="P:X360.IO.DJsIO.Accessed">
            <summary>
            Bool if the Stream is properly accessed
            </summary>
        </member>
        <member name="P:X360.IO.DJsIO.FileNameShort">
            <summary>
            The name of the actual file
            </summary>
        </member>
        <member name="P:X360.IO.DJsIO.FilePath">
            <summary>
            The file path of this file
            </summary>
        </member>
        <member name="P:X360.IO.DJsIO.FileNameLong">
            <summary>
            Returns the full file location (applicable only to File Stream)
            </summary>
        </member>
        <member name="P:X360.IO.DJsIO.FileExtension">
            <summary>
            The Extension of the File (File Stream only)
            </summary>
        </member>
        <member name="P:X360.IO.DJsIO.IsBigEndian">
            <summary>
            Select what Endian to Read/Write in
            </summary>
        </member>
        <member name="P:X360.IO.DJsIO.IOType">
            <summary>
            The type of this instance
            </summary>
        </member>
        <member name="P:X360.IO.DJsIO.Length">
            <summary>
            Returns the stream length
            </summary>
        </member>
        <member name="P:X360.IO.DJsIO.LengthFriendly">
            <summary>
            Gets a text based size for users
            </summary>
        </member>
        <member name="P:X360.IO.DJsIO.Position">
            <summary>
            Returns the stream position
            </summary>
        </member>
        <member name="T:X360.IO.DriveIO">
            <summary>
            IO to handle Drives
            </summary>
        </member>
        <member name="M:X360.IO.DriveIO.#ctor(X360.IO.Drive,System.Boolean)">
            <summary>
            Accesses a stream from a Drive
            </summary>
            <param name="xIn"></param>
            <param name="BigEndian"></param>
        </member>
        <member name="M:X360.IO.DriveIO.#ctor(X360.IO.Drive@,System.Boolean)">
            <summary>
            Accesses a stream from a Drive
            </summary>
            <param name="xIn"></param>
            <param name="BigEndian"></param>
        </member>
        <member name="M:X360.IO.DriveIO.Write(System.Byte[])">
            <summary>
            Writes bytes to the stream
            </summary>
            <param name="xIn"></param>
        </member>
        <member name="M:X360.IO.DriveIO.ReadBytes(System.Int32)">
            <summary>
            Reads bytes to the stream
            </summary>
            <param name="xSize"></param>
            <returns></returns>
        </member>
        <member name="M:X360.IO.DriveIO.Flush">
            <summary>
            DOES NOT WORK IN THIS CLASS
            </summary>
        </member>
        <member name="M:X360.IO.DriveIO.OpenAgain">
            <summary>
            Tries to open stream again
            </summary>
            <returns></returns>
        </member>
        <member name="M:X360.IO.DriveIO.Close">
            <summary>
            Closes the stream
            </summary>
            <returns></returns>
        </member>
        <member name="M:X360.IO.DriveIO.ReadStream">
            <summary>
            NOT FOR THIS STREAM
            </summary>
            <returns></returns>
        </member>
        <member name="M:X360.IO.DriveIO.SetLength(System.Int64)">
            <summary>
            NOT FOR THIS STREAM
            </summary>
            <param name="xLen"></param>
            <returns></returns>
        </member>
        <member name="P:X360.IO.DriveIO.Length">
            <summary>
            Grabs the length of the stream
            </summary>
        </member>
        <member name="T:X360.IO.STFSStreamIO">
            <summary>
            STFS Stream
            </summary>
        </member>
        <member name="M:X360.IO.STFSStreamIO.#ctor(X360.STFS.FileEntry,System.Boolean)">
            <summary>
            Creates a Real Time STFS File Stream
            </summary>
            <param name="Instance"></param>
            <param name="BigEndian"></param>
        </member>
        <member name="M:X360.IO.STFSStreamIO.ReadBytes(System.Int32)">
            <summary>
            Reads bytes from a stream
            </summary>
            <param name="xSize"></param>
            <returns></returns>
        </member>
        <member name="M:X360.IO.STFSStreamIO.Write(System.Byte[])">
            <summary>
            Writes a byte array to the stream
            </summary>
            <param name="xIn"></param>
        </member>
        <member name="M:X360.IO.STFSStreamIO.Close">
            <summary>
            Closes the STFS stream
            </summary>
            <returns></returns>
        </member>
        <member name="M:X360.IO.STFSStreamIO.Dispose">
            <summary>
            Disposes the stream
            </summary>
            <returns></returns>
        </member>
        <member name="M:X360.IO.STFSStreamIO.GrabStream">
            <summary>
            NOT FOR THIS STREAM
            </summary>
            <returns></returns>
        </member>
        <member name="M:X360.IO.STFSStreamIO.SetLength(System.Int64)">
            <summary>
            NOT FOR THIS STREAM
            </summary>
            <param name="xLen"></param>
            <returns></returns>
        </member>
        <member name="M:X360.IO.STFSStreamIO.GetAccessed">
            <summary>
            Checks if it is opened
            </summary>
            <returns></returns>
        </member>
        <member name="M:X360.IO.STFSStreamIO.OpenAgain">
            <summary>
            NOT FOR THIS STREAM
            </summary>
            <returns></returns>
        </member>
        <member name="P:X360.IO.STFSStreamIO.Position">
            <summary>
            Sets the position of the stream
            </summary>
        </member>
        <member name="P:X360.IO.STFSStreamIO.Length">
            <summary>
            Grabs the length of the stream
            </summary>
        </member>
        <member name="T:X360.IO.FATXStreamIO">
            <summary>
            FATX Stream
            </summary>
        </member>
        <member name="M:X360.IO.FATXStreamIO.#ctor(X360.FATX.FATXFileEntry,System.UInt32[]@,System.Boolean)">
            <summary>
            File IO on a FATX drive
            </summary>
            <param name="Instance"></param>
            <param name="xBlocks"></param>
            <param name="BigEndian"></param>
        </member>
        <member name="M:X360.IO.FATXStreamIO.ReadBytes(System.Int32)">
            <summary>
            Reads bytes from a stream
            </summary>
            <param name="xSize"></param>
            <returns></returns>
        </member>
        <member name="M:X360.IO.FATXStreamIO.Write(System.Byte[])">
            <summary>
            Writes a byte array to a stream
            </summary>
            <param name="xIn"></param>
        </member>
        <member name="M:X360.IO.FATXStreamIO.Close">
            <summary>
            Closes the stream
            </summary>
            <returns></returns>
        </member>
        <member name="M:X360.IO.FATXStreamIO.Dispose">
            <summary>
            Disposes the stream
            </summary>
            <returns></returns>
        </member>
        <member name="M:X360.IO.FATXStreamIO.GetAccessed">
            <summary>
            Checks if the stream is open
            </summary>
            <returns></returns>
        </member>
        <member name="M:X360.IO.FATXStreamIO.GrabStream">
            <summary>
            DOES NOT WORK FOR THIS STREAM
            </summary>
            <returns></returns>
        </member>
        <member name="M:X360.IO.FATXStreamIO.OpenAgain">
            <summary>
            DOES NOT WORK FOR THIS STREAM
            </summary>
            <returns></returns>
        </member>
        <member name="M:X360.IO.FATXStreamIO.SetLength(System.Int64)">
            <summary>
            DOES NOT WORK FOR THIS STREAM
            </summary>
            <param name="xLen"></param>
            <returns></returns>
        </member>
        <member name="P:X360.IO.FATXStreamIO.Position">
            <summary>
            Position of stream
            </summary>
        </member>
        <member name="P:X360.IO.FATXStreamIO.Length">
            <summary>
            Grabs the size of the stream
            </summary>
        </member>
        <member name="T:X360.IO.MultiFileIO">
            <summary>
            IO to handle a multifile IO to act as one file
            </summary>
        </member>
        <member name="M:X360.IO.MultiFileIO.#ctor(System.String[],System.Boolean)">
            <summary>
            Creates an instances of multiple files interpretted as one
            </summary>
            <param name="Files">Files in order of piece number</param>
            <param name="BigEndian">Byte Endian</param>
        </member>
        <member name="M:X360.IO.MultiFileIO.ReadBytes(System.Int32)">
            <summary>
            Reads bytes from the stream
            </summary>
            <param name="xSize"></param>
            <returns></returns>
        </member>
        <member name="M:X360.IO.MultiFileIO.Write(System.Byte[])">
            <summary>
            Writes bytes to the stream
            </summary>
            <param name="xIn"></param>
        </member>
        <member name="M:X360.IO.MultiFileIO.ReadStream">
            <summary>
            NOT FOR THIS STREAM
            </summary>
            <returns></returns>
        </member>
        <member name="M:X360.IO.MultiFileIO.SetLength(System.Int64)">
            <summary>
            NOT FOR THIS STREAM
            </summary>
            <param name="xLen"></param>
            <returns></returns>
        </member>
        <member name="M:X360.IO.MultiFileIO.GrabStream">
            <summary>
            NOT FOR THIS STREAM
            </summary>
            <returns></returns>
        </member>
        <member name="M:X360.IO.MultiFileIO.OpenAgain">
            <summary>
            NOT FOR THIS STREAM
            </summary>
            <returns></returns>
        </member>
        <member name="M:X360.IO.MultiFileIO.GetAccessed">
            <summary>
            Checks if instance is valid
            </summary>
            <returns></returns>
        </member>
        <member name="M:X360.IO.MultiFileIO.Flush">
            <summary>
            Flushes the stream
            </summary>
        </member>
        <member name="M:X360.IO.MultiFileIO.Close">
            <summary>
            Closes the stream
            </summary>
            <returns></returns>
        </member>
        <member name="M:X360.IO.MultiFileIO.Dispose">
            <summary>
            Disposes the stream
            </summary>
            <returns></returns>
        </member>
        <member name="P:X360.IO.MultiFileIO.Position">
            <summary>
            Gets or sets the position of the stream
            </summary>
        </member>
        <member name="P:X360.IO.MultiFileIO.Length">
            <summary>
            Get's the length of the stream
            </summary>
        </member>
        <member name="T:X360.IO.DiskGeometry">
            <summary>
            Object to hold Disk Geometry details
            </summary>
        </member>
        <member name="P:X360.IO.DiskGeometry.BytesPerSector">
            <summary>
            Bytes Per Sector
            </summary>
        </member>
        <member name="P:X360.IO.DiskGeometry.DiskSize">
            <summary>
            Disk Size
            </summary>
        </member>
        <member name="T:X360.IO.DeviceType">
            <summary>
            Type of device
            </summary>
        </member>
        <member name="F:X360.IO.DeviceType.PhysicalDrive">
            <summary>
            Physical type
            </summary>
        </member>
        <member name="F:X360.IO.DeviceType.LogicalDrive">
            <summary>
            Logical type
            </summary>
        </member>
        <member name="T:X360.IO.Drive">
            <summary>
            Class for Accessing Drives
            </summary>
        </member>
        <member name="M:X360.IO.Drive.#ctor(System.Byte)">
            <summary>
            Grabs a physical drive from an index
            </summary>
            <param name="index"></param>
        </member>
        <member name="M:X360.IO.Drive.#ctor(System.Char)">
            <summary>
            Grabs a logical drive from a letter
            </summary>
            <param name="Letter"></param>
        </member>
        <member name="M:X360.IO.Drive.#ctor(System.Byte,X360.IO.DeviceType)">
            <summary>
            Grabs drive
            </summary>
            <param name="index"></param>
            <param name="xtype"></param>
        </member>
        <member name="P:X360.IO.Drive.Accessed">
            <summary>
            Is accessed
            </summary>
        </member>
        <member name="P:X360.IO.Drive.Geometry">
            <summary>
            This geometry
            </summary>
        </member>
        <member name="P:X360.IO.Drive.Type">
            <summary>
            This type
            </summary>
        </member>
        <member name="P:X360.IO.Drive.DeviceName">
            <summary>
            Device name
            </summary>
        </member>
        <member name="T:X360.IO.Drive.FlagsAndAttributes">
            <summary>
            IO Attributes
            </summary>
        </member>
        <member name="F:X360.IO.Drive.FlagsAndAttributes.ReadOnly">
            <summary>
            Read Only
            </summary>
        </member>
        <member name="F:X360.IO.Drive.FlagsAndAttributes.Hidden">
            <summary>
            Hidden
            </summary>
        </member>
        <member name="F:X360.IO.Drive.FlagsAndAttributes.System">
            <summary>
            System
            </summary>
        </member>
        <member name="F:X360.IO.Drive.FlagsAndAttributes.Directory">
            <summary>
            Directory
            </summary>
        </member>
        <member name="F:X360.IO.Drive.FlagsAndAttributes.Archive">
            <summary>
            Archive
            </summary>
        </member>
        <member name="F:X360.IO.Drive.FlagsAndAttributes.Device">
            <summary>
            Device
            </summary>
        </member>
        <member name="F:X360.IO.Drive.FlagsAndAttributes.Normal">
            <summary>
            Normal
            </summary>
        </member>
        <member name="F:X360.IO.Drive.FlagsAndAttributes.Temporary">
            <summary>
            Temporary
            </summary>
        </member>
        <member name="F:X360.IO.Drive.FlagsAndAttributes.SparseFile">
            <summary>
            Sparse File
            </summary>
        </member>
        <member name="F:X360.IO.Drive.FlagsAndAttributes.ReparsePoint">
            <summary>
            Reparse Point
            </summary>
        </member>
        <member name="F:X360.IO.Drive.FlagsAndAttributes.Compressed">
            <summary>
            Compressed
            </summary>
        </member>
        <member name="F:X360.IO.Drive.FlagsAndAttributes.Offline">
            <summary>
            Offline
            </summary>
        </member>
        <member name="F:X360.IO.Drive.FlagsAndAttributes.NotContentIndexed">
            <summary>
            Not Content Indexed
            </summary>
        </member>
        <member name="F:X360.IO.Drive.FlagsAndAttributes.Encrypted">
            <summary>
            Encrypted
            </summary>
        </member>
        <member name="F:X360.IO.Drive.FlagsAndAttributes.Write_Through">
            <summary>
            Write through
            </summary>
        </member>
        <member name="F:X360.IO.Drive.FlagsAndAttributes.Overlapped">
            <summary>
            Overlapped
            </summary>
        </member>
        <member name="F:X360.IO.Drive.FlagsAndAttributes.NoBuffering">
            <summary>
            No Buffering
            </summary>
        </member>
        <member name="F:X360.IO.Drive.FlagsAndAttributes.RandomAccess">
            <summary>
            Random Access
            </summary>
        </member>
        <member name="F:X360.IO.Drive.FlagsAndAttributes.SequentialScan">
            <summary>
            Sequential Scan
            </summary>
        </member>
        <member name="F:X360.IO.Drive.FlagsAndAttributes.DeleteOnClose">
            <summary>
            Delete on close
            </summary>
        </member>
        <member name="F:X360.IO.Drive.FlagsAndAttributes.BackupSemantics">
            <summary>
            Backup Semantics
            </summary>
        </member>
        <member name="F:X360.IO.Drive.FlagsAndAttributes.PosixSemantics">
            <summary>
            Posix Semantics
            </summary>
        </member>
        <member name="F:X360.IO.Drive.FlagsAndAttributes.OpenReparsePoint">
            <summary>
            Open Reparse Point
            </summary>
        </member>
        <member name="F:X360.IO.Drive.FlagsAndAttributes.OpenNoRecall">
            <summary>
            Open No Recall
            </summary>
        </member>
        <member name="F:X360.IO.Drive.FlagsAndAttributes.FirstPipeInstance">
            <summary>
            First Pipe Instance
            </summary>
        </member>
        <member name="T:X360.GDFX.GDFExceptions">
            <summary>
            GDF Exceptions
            </summary>
        </member>
        <member name="P:X360.GDFX.GDFExceptions.NotGDF">
            <summary>
            Not a GDFX image
            </summary>
        </member>
        <member name="T:X360.GDFX.GDFMagic">
            <summary>
            GDFX signatures
            </summary>
        </member>
        <member name="F:X360.GDFX.GDFMagic.XMedia">
            <summary>
            MICROSOFT*XBOX*MEDIA
            </summary>
        </member>
        <member name="F:X360.GDFX.GDFMagic.XDVDLayout">
            <summary>
            XBOX_DVD_LAYOUT_TOOL_SIG
            </summary>
        </member>
        <member name="T:X360.GDFX.GDFAttributes">
            <summary>
            GDFX File attributes
            </summary>
        </member>
        <member name="F:X360.GDFX.GDFAttributes.None">
            <summary>
            No attributes
            </summary>
        </member>
        <member name="F:X360.GDFX.GDFAttributes.ReadOnly">
            <summary>
            Read only
            </summary>
        </member>
        <member name="F:X360.GDFX.GDFAttributes.Hidden">
            <summary>
            Hidden
            </summary>
        </member>
        <member name="F:X360.GDFX.GDFAttributes.System">
            <summary>
            System
            </summary>
        </member>
        <member name="F:X360.GDFX.GDFAttributes.Directory">
            <summary>
            Directory
            </summary>
        </member>
        <member name="F:X360.GDFX.GDFAttributes.Archived">
            <summary>
            Archived
            </summary>
        </member>
        <member name="F:X360.GDFX.GDFAttributes.Normal">
            <summary>
            Normal
            </summary>
        </member>
        <member name="T:X360.GDFX.GDFEntry">
            <summary>
            Object to hold a GDF entry
            </summary>
        </member>
        <member name="P:X360.GDFX.GDFEntry.EntryAttributes">
            <summary>
            Attributes
            </summary>
        </member>
        <member name="P:X360.GDFX.GDFEntry.Name">
            <summary>
            Name
            </summary>
        </member>
        <member name="P:X360.GDFX.GDFEntry.Size">
            <summary>
            Size
            </summary>
        </member>
        <member name="T:X360.GDFX.GDFFile">
            <summary>
            Object to hold a GDF File
            </summary>
        </member>
        <member name="M:X360.GDFX.GDFFile.Extract(System.String)">
            <summary>
            Extract a file
            </summary>
            <param name="OutLocale"></param>
            <returns></returns>
        </member>
        <member name="M:X360.GDFX.GDFFile.Inject(X360.IO.DJsIO)">
            <summary>
            Overwrite the file
            </summary>
            <param name="xIO"></param>
            <returns></returns>
        </member>
        <member name="M:X360.GDFX.GDFFile.Inject(System.String)">
            <summary>
            Overwrite the file
            </summary>
            <param name="FileLocale"></param>
            <returns></returns>
        </member>
        <member name="T:X360.GDFX.GDFFolder">
            <summary>
            GDF folder entry
            </summary>
        </member>
        <member name="M:X360.GDFX.GDFFolder.Read">
            <summary>
            Reads the folder
            </summary>
            <returns></returns>
        </member>
        <member name="M:X360.GDFX.GDFFolder.Extract(System.String,System.Boolean)">
            <summary>
            Extract the folder
            </summary>
            <param name="OutLocation"></param>
            <param name="SubItems"></param>
            <returns></returns>
        </member>
        <member name="T:X360.GDFX.GDFContents">
            <summary>
            Object to hold GDF Folder contents
            </summary>
        </member>
        <member name="P:X360.GDFX.GDFContents.Files">
            <summary>
            Files
            </summary>
        </member>
        <member name="P:X360.GDFX.GDFContents.Folders">
            <summary>
            Folders
            </summary>
        </member>
        <member name="T:X360.GDFX.GDFImage">
            <summary>
            Object to hold data of a GDF file
            </summary>
        </member>
        <member name="M:X360.GDFX.GDFImage.#ctor(X360.IO.DJsIO)">
            <summary>
            Grabs image from an IO
            </summary>
            <param name="xIOIn"></param>
        </member>
        <member name="M:X360.GDFX.GDFImage.#ctor(System.String)">
            <summary>
            Grabs an image from a file location
            </summary>
            <param name="FileLocation"></param>
        </member>
        <member name="M:X360.GDFX.GDFImage.#ctor(System.String,System.UInt32)">
            <summary>
            Grabs an image from a file location and specified deviation
            </summary>
            <param name="FileLocation"></param>
            <param name="Deviation"></param>
        </member>
        <member name="M:X360.GDFX.GDFImage.#ctor(X360.IO.DJsIO,System.UInt32)">
            <summary>
            Grabs an image from an IO and specified Deviation
            </summary>
            <param name="xIOIn"></param>
            <param name="Deviation"></param>
        </member>
        <member name="M:X360.GDFX.GDFImage.GetFile(System.String,X360.GDFX.GDFFolder@)">
            <summary>
            Get a file from a path
            </summary>
            <param name="Path"></param>
            <param name="Parent"></param>
            <returns></returns>
        </member>
        <member name="M:X360.GDFX.GDFImage.Close">
            <summary>
            Close the Image IO
            </summary>
            <returns></returns>
        </member>
        <member name="P:X360.GDFX.GDFImage.Deviation">
            <summary>
            Deviation
            </summary>
        </member>
        <member name="P:X360.GDFX.GDFImage.Valid">
            <summary>
            Is a valid image
            </summary>
        </member>
        <member name="P:X360.GDFX.GDFImage.Root">
            <summary>
            Root folder
            </summary>
        </member>
        <member name="P:X360.GDFX.GDFImage.FileNameLong">
            <summary>
            IO File Name
            </summary>
        </member>
    </members>
</doc>
