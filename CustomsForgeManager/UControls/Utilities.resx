<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="btnUploadSong.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        iVBORw0KGgoAAAANSUhEUgAAABAAAAAQCAYAAAAf8/9hAAAAAXNSR0IArs4c6QAAAARnQU1BAACxjwv8
        YQUAAAAgY0hSTQAAeiYAAICEAAD6AAAAgOgAAHUwAADqYAAAOpgAABdwnLpRPAAAAAlwSFlzAAANzAAA
        DcwBgg+iugAAAyxJREFUOE9lk/tvWmUYx2H+K/3V/8GoK2VLqe0POpdYrcaYcuZwC1OnyaAVHLsk7XqZ
        m5YV3IVFli60UqS4hVUosjWUDtaxXkbvdRTGwq1MKB/POVuXqid5c97kfZ/P+3y/z/MoAcXuTy0Y6xQK
        ZRt7XntDQe116QyFMqak5lcqGPT0G+f/FSABpNWgNexRCUZ9i95SdP0xVXuQXCOVzZHN5QklVjjl9G9r
        jnxfVGmNeunuTtyu4M7AmZ9dz9f+SpHJZMhms+TzeZ7lC9xbfEryyTMWNp7SftZeqtcaAzsQGSBRPzk5
        WArMbnA7tsRmOk2xWKRSqVCr1eR/oVAgtpRiemmTTy3Wkkpr0MvyRVJd4xfm4sD4PMddM5zyzZNYy1Au
        l6lWq2xvb8uAUqlEKp1hfnEZx8QcjTpTUYoVAUbz4Qsj1W+HH/KZYxqLb0F8Jc3W1pYMkDIobJVZzeSY
        W03Re2sWi/cRQo+zKmZhVtQLncHjjgCt9ggfXYlywj2LLbxKZDnLZr5E+fnfDMdSWEMr9N15jM4Zo+1y
        hGM2H3u1xqBCJXTkTtycRnPhLs0/TfL5jRlMYwv0B1aw3dsQg58QX0kzFFmmy/eIQ44I9T1Bvr4+gehd
        TgYcvT7J/vN/0njxLu8NTiE4Z/jGPUfn2GOCiVXW19dJJpPE43HGx8e5NuJDuHRbBBhysoTW3lGaLoZR
        nw/TMjDJQXuUD6/e5+NrMb5zP2AqniAajRIMBvF4PNxwjXDg9C/sbZckiEY0GQcrzT+Gebtngv0/hGUp
        716K8L4tykHbFANjEfx+vxzscA6hs/rY91VfRTZRKoVa6Cy+0z0mAoK8JUI0opQ20dBDomGHnXG6PVG8
        Xi92p4uWcz7UJicNgvFFGV80kkG/7+iZgqb3Dm92BzhgnZTdNrgTmH+bpcP9kJFRLx0OPyrLMA06S+FV
        I+3MgdSe6iOnC5qzv9JqDfHl0H26bs1hDy3S/XuCy94QH3TdRKU7Wahv/08rvxomMRO10FFsEPU1ma7S
        2jdKW/8ozaYrqI6dq0hpSy//b5h2JuslqE4yR3JYKpO0Xu7Nkubdd6X9P3wFsZv1wgNBAAAAAElFTkSu
        QmCC
</value>
  </data>
  <data name="btnRequestSong.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        iVBORw0KGgoAAAANSUhEUgAAABAAAAAQCAYAAAAf8/9hAAAAAXNSR0IArs4c6QAAAARnQU1BAACxjwv8
        YQUAAAAgY0hSTQAAeiYAAICEAAD6AAAAgOgAAHUwAADqYAAAOpgAABdwnLpRPAAAAAlwSFlzAAANzAAA
        DcwBgg+iugAAAyxJREFUOE9lk/tvWmUYx2H+K/3V/8GoK2VLqe0POpdYrcaYcuZwC1OnyaAVHLsk7XqZ
        m5YV3IVFli60UqS4hVUosjWUDtaxXkbvdRTGwq1MKB/POVuXqid5c97kfZ/P+3y/z/MoAcXuTy0Y6xQK
        ZRt7XntDQe116QyFMqak5lcqGPT0G+f/FSABpNWgNexRCUZ9i95SdP0xVXuQXCOVzZHN5QklVjjl9G9r
        jnxfVGmNeunuTtyu4M7AmZ9dz9f+SpHJZMhms+TzeZ7lC9xbfEryyTMWNp7SftZeqtcaAzsQGSBRPzk5
        WArMbnA7tsRmOk2xWKRSqVCr1eR/oVAgtpRiemmTTy3Wkkpr0MvyRVJd4xfm4sD4PMddM5zyzZNYy1Au
        l6lWq2xvb8uAUqlEKp1hfnEZx8QcjTpTUYoVAUbz4Qsj1W+HH/KZYxqLb0F8Jc3W1pYMkDIobJVZzeSY
        W03Re2sWi/cRQo+zKmZhVtQLncHjjgCt9ggfXYlywj2LLbxKZDnLZr5E+fnfDMdSWEMr9N15jM4Zo+1y
        hGM2H3u1xqBCJXTkTtycRnPhLs0/TfL5jRlMYwv0B1aw3dsQg58QX0kzFFmmy/eIQ44I9T1Bvr4+gehd
        TgYcvT7J/vN/0njxLu8NTiE4Z/jGPUfn2GOCiVXW19dJJpPE43HGx8e5NuJDuHRbBBhysoTW3lGaLoZR
        nw/TMjDJQXuUD6/e5+NrMb5zP2AqniAajRIMBvF4PNxwjXDg9C/sbZckiEY0GQcrzT+Gebtngv0/hGUp
        716K8L4tykHbFANjEfx+vxzscA6hs/rY91VfRTZRKoVa6Cy+0z0mAoK8JUI0opQ20dBDomGHnXG6PVG8
        Xi92p4uWcz7UJicNgvFFGV80kkG/7+iZgqb3Dm92BzhgnZTdNrgTmH+bpcP9kJFRLx0OPyrLMA06S+FV
        I+3MgdSe6iOnC5qzv9JqDfHl0H26bs1hDy3S/XuCy94QH3TdRKU7Wahv/08rvxomMRO10FFsEPU1ma7S
        2jdKW/8ozaYrqI6dq0hpSy//b5h2JuslqE4yR3JYKpO0Xu7Nkubdd6X9P3wFsZv1wgNBAAAAAElFTkSu
        QmCC
</value>
  </data>
</root>